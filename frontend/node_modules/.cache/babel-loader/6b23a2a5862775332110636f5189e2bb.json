{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jonatan\\\\Desktop\\\\Metodos Agiles\\\\AppAsistencias\\\\app-asistencias\\\\frontend\\\\src\\\\components\\\\asistencias\\\\registrarAsistencias.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { UsuarioContext } from \"../../contexts/UsuarioContext\";\nimport { CursosContext } from \"../../contexts/CursosContext\";\nimport { AsistenciasContext } from \"../../contexts/AsistenciasContext\";\nimport Button from 'react-bootstrap/Button';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport Alert from 'react-bootstrap/Alert';\nimport { cargarCsv } from './csvParser';\nimport { filtrarDatos } from './filtrarDatosAsistencia';\nimport { Calendar } from './calendar.component';\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default function Asistencias() {\n  _s();\n\n  const [usuario, setUsuario] = useContext(UsuarioContext);\n  const [cursos, obtenerCursos] = useContext(CursosContext);\n  const [asistencias, obtenerAsistencias] = useContext(AsistenciasContext);\n  const [alumnos, setAlumnos] = useState([]);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [cursoSeleccionado, setCursoSeleccionado] = useState('');\n  const [fechaSeleccionada, setFechaSeleccionada] = useState(new Date());\n  const [nuevaFechaCsv, setNuevaFechaCsv] = useState(new Date());\n  const refForm = useRef(null);\n\n  const prepararArreglo = datos => {\n    var registro = [];\n    datos.map(alumno => registro.push([alumno.nombre, alumno.asistencia]));\n    return registro;\n  };\n\n  const prepararArregloCorreos = datos => {\n    var registro = [];\n\n    if (cursos != undefined && cursos.length > 0) {\n      const alumnosRegistrados = cursos[cursoSeleccionado].alumnos;\n      const nombresAlumnosRegistrados = [];\n      alumnosRegistrados.forEach(element => {\n        nombresAlumnosRegistrados.push(element.nombre);\n      });\n      datos.forEach(element => {\n        if (!nombresAlumnosRegistrados.includes(element.nombre)) {\n          registro.push({\n            nombre: alumno.nombre,\n            email: 'correodefault@gmail.com'\n          });\n        }\n      });\n    }\n\n    return registro;\n  };\n\n  const filtrarAlumnosDuplicados = (curso, registroAlumnos) => {\n    const copiaAlumnos = [...alumnos];\n    const copiaAlumnosNombre = [];\n    copiaAlumnos.forEach(alumno => {\n      copiaAlumnosNombre.push(alumno.nombre);\n    });\n    arregloAlumnosImportados.forEach(alumnoImportado => {\n      if (!copiaAlumnosNombre.includes(alumnoImportado.nombre)) {\n        copiaAlumnos.push(alumnoImportado);\n      } else {\n        copiaAlumnos.forEach(element => {\n          if (element.nombre == alumnoImportado.nombre) {\n            element.asistencia = alumnoImportado.asistencia;\n          }\n        });\n      }\n    });\n    setAlumnos(copiaAlumnos);\n  };\n\n  const verificarDatos = (cur, alu) => {\n    if (alu.length == 0) return false;\n    if (cur.length == 0) return false;\n    return true;\n  };\n\n  const onSubmit = async data => {\n    var cursoSeleccionadoLocal = '';\n\n    if (cursoSeleccionado.length == 0) {\n      if (cursos.length > 0) {\n        cursoSeleccionadoLocal = cursos[0]._id;\n      }\n    } else {\n      cursoSeleccionadoLocal = cursoSeleccionado;\n    }\n\n    const realizarVerificacion = (cur, alus) => {\n      if (!verificarDatos(cur, alus)) {\n        console.log(\"Datos invalidos\");\n        mostrarMensajeError();\n        return false;\n      }\n\n      return true;\n    };\n\n    if (realizarVerificacion(cursoSeleccionadoLocal, alumnos)) {\n      const registro = prepararArreglo(alumnos);\n      const asistencia = {\n        \"idCurso\": cursoSeleccionadoLocal,\n        \"fecha\": fechaSeleccionada,\n        \"registro\": registro\n      };\n      console.log(asistencia);\n\n      const registarAlumnoEnCurso = async (idCurso, arregloAlumnos) => {\n        axios.put('http://localhost:5000/cursos/agregaAlumnos', {\n          \"curso\": idCurso,\n          \"alumnos\": JSON.stringify(arregloAlumnos)\n        }).then(res => {\n          console.log(res);\n          obtenerCursos();\n        }).catch(e => {\n          console.log(e);\n          console.log(\"Error en registrar alumno en curso\");\n          mostrarMensajeError();\n        });\n      };\n\n      const registrarAsistencia = () => {\n        axios.post('http://localhost:5000/asistencias/add', asistencia).then(res => {\n          setShow(true);\n          obtenerAsistencias();\n          const registroAlumnosCorreo = prepararArregloCorreos(alumnos);\n          registarAlumnoEnCurso(cursoSeleccionadoLocal, registroAlumnosCorreo);\n          console.log(res);\n        }).catch(e => {\n          mostrarMensajeError();\n          console.log(e);\n        });\n      };\n\n      registrarAsistencia();\n    }\n  };\n\n  const [show, setShow] = useState(false);\n\n  function AlertaExito() {\n    if (show) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        onClose: () => setShow(false),\n        dismissible: true,\n        children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: \"Registro exitoso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }, this);\n  }\n\n  const [mensajeError, setMensajeError] = useState(\"\");\n\n  const mostrarMensajeError = () => {\n    setMensajeError(\"Error al agregar curso\");\n  };\n\n  const agregarAlumno = () => {\n    if (alumnos.length < 40) {\n      establecerAlumnos({\n        nombre: '',\n        asistencia: false\n      });\n    } else {\n      console.log(\"Demasiados alumnos\");\n    }\n  };\n\n  const establecerAlumnos = alum => {\n    const copia = [...alumnos, alum];\n    setAlumnos(copia);\n  };\n\n  const establecerAlumnosArreglo = arregloAlumnosImportados => {\n    const copiaAlumnos = [...alumnos];\n    const copiaAlumnosNombre = [];\n    copiaAlumnos.forEach(alumno => {\n      copiaAlumnosNombre.push(alumno.nombre);\n    });\n    arregloAlumnosImportados.forEach(alumnoImportado => {\n      if (!copiaAlumnosNombre.includes(alumnoImportado.nombre)) {\n        copiaAlumnos.push(alumnoImportado);\n      } else {\n        copiaAlumnos.forEach(element => {\n          if (element.nombre == alumnoImportado.nombre) {\n            element.asistencia = alumnoImportado.asistencia;\n          }\n        });\n      }\n    });\n    setAlumnos(copiaAlumnos);\n  };\n\n  const formatearAlumnos = arregloAlumnos => {\n    const arregloAlumnosFormateados = [];\n    arregloAlumnos.forEach(element => {\n      arregloAlumnosFormateados.push({\n        nombre: element.nombre,\n        asistencia: false\n      });\n    });\n    return arregloAlumnosFormateados;\n  };\n\n  const establecerAlumnosCursos = () => {\n    if (cursoSeleccionado != '') {\n      const idCursoSeleccionado = cursoSeleccionado;\n      const cursoEncontrado = cursos.find(curso => curso._id == idCursoSeleccionado);\n      const arregloAlumnosFormateados = formatearAlumnos(cursoEncontrado.alumnos);\n      const clonAlumnos = [...arregloAlumnosFormateados];\n      setAlumnos(clonAlumnos);\n    } else {\n      if (cursos.length > 0) {\n        const cursoEncontrado = cursos[0];\n        const arregloAlumnosFormateados = formatearAlumnos(cursoEncontrado.alumnos);\n        const clonAlumnos = [...arregloAlumnosFormateados];\n        setAlumnos(clonAlumnos);\n      }\n    }\n  };\n\n  const handleBlur = (tags, tipo) => event => {\n    const copia = alumnos;\n\n    if (tipo == 0) {\n      const nombre = event.target.value;\n      copia[tags].nombre = nombre;\n    } else {\n      var asistencia = false;\n\n      if (event.target.checked) {\n        asistencia = true;\n      }\n\n      copia[tags].asistencia = asistencia;\n    }\n\n    setAlumnos(copia);\n  };\n\n  const handleChange = event => {\n    const cursoId = event.target.value;\n\n    if (cursoId != cursoSeleccionado) {\n      setCursoSeleccionado(cursoId);\n    }\n  };\n\n  const handleChangeFecha = nuevoValor => {\n    setFechaSeleccionada(nuevoValor);\n  };\n\n  const handleFileUpload = async e => {\n    const reader = new FileReader();\n\n    reader.onload = async e => {\n      const text = e.target.result;\n      cargarCsv(text).then(data => {\n        filtrarDatos(data).then(respuesta => {\n          encontrarCursoCoincidencia(respuesta.curso);\n          setFechaSeleccionada(respuesta.fecha);\n          establecerAlumnosArreglo(respuesta.alumnos);\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    reader.readAsText(e.target.files[0]);\n  };\n\n  const encontrarCursoCoincidencia = nombreCurso => {\n    for (var i = 0; i < cursos.length; i++) {\n      if (cursos[i].nombre.trim() == nombreCurso) {\n        setCursoSeleccionado(cursos[i]._id);\n      }\n    }\n  };\n\n  const RegistroAlumnos = () => {\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: alumnos.map((alumno, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            className: \"form-control box\",\n            onBlur: handleBlur(idx, 0),\n            id: `text-${idx}`,\n            defaultValue: alumno.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            custom: true,\n            id: `checkbox-${idx}`,\n            onBlur: handleBlur(idx, 1),\n            defaultChecked: alumno.asistencia\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this);\n  };\n\n  useEffect(establecerAlumnosCursos, [cursoSeleccionado]);\n  useEffect(RegistroAlumnos, [alumnos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" container formulario table-dark\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registro de asistencias\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      id: \"forma-asistencias\",\n      ref: refForm,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        id: \"seleccionar-curso\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Curso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          value: cursoSeleccionado,\n          onChange: handleChange,\n          children: cursos.map((curso, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: curso._id,\n            children: curso.nombre\n          }, curso._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        id: \"seleccionar-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Grupo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Seleccione un grupo...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        id: \"seleccionar-unidad\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Unidad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Seleccione una unidad...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Fecha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        value: fechaSeleccionada,\n        onChange: handleChangeFecha,\n        nuevaFechaCsv: nuevaFechaCsv\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Registro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        id: \"tablaRegistro\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Alumno\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Asistencia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RegistroAlumnos, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: agregarAlumno,\n        variant: \"dark\",\n        children: \"Aniadir alumno\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.File, {\n          id: \"formcheck-api-regular\",\n          children: [/*#__PURE__*/_jsxDEV(Form.File.Label, {\n            children: \"Generar asistencia con CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.File.Input, {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex flex-column justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Registrar asistencia\",\n          className: \"btn btn-secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: mensajeError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AlertaExito, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Asistencias, \"LvixAs5Kfjy+EnzL3CDqDToWl/Q=\", false, function () {\n  return [useForm];\n});\n\n_c = Asistencias;\n\nvar _c;\n\n$RefreshReg$(_c, \"Asistencias\");","map":{"version":3,"sources":["C:/Users/Jonatan/Desktop/Metodos Agiles/AppAsistencias/app-asistencias/frontend/src/components/asistencias/registrarAsistencias.component.js"],"names":["React","useState","useContext","useEffect","useRef","Form","UsuarioContext","CursosContext","AsistenciasContext","Button","useForm","axios","Alert","cargarCsv","filtrarDatos","Calendar","Asistencias","usuario","setUsuario","cursos","obtenerCursos","asistencias","obtenerAsistencias","alumnos","setAlumnos","register","handleSubmit","errors","cursoSeleccionado","setCursoSeleccionado","fechaSeleccionada","setFechaSeleccionada","Date","nuevaFechaCsv","setNuevaFechaCsv","refForm","prepararArreglo","datos","registro","map","alumno","push","nombre","asistencia","prepararArregloCorreos","undefined","length","alumnosRegistrados","nombresAlumnosRegistrados","forEach","element","includes","email","filtrarAlumnosDuplicados","curso","registroAlumnos","copiaAlumnos","copiaAlumnosNombre","arregloAlumnosImportados","alumnoImportado","verificarDatos","cur","alu","onSubmit","data","cursoSeleccionadoLocal","_id","realizarVerificacion","alus","console","log","mostrarMensajeError","registarAlumnoEnCurso","idCurso","arregloAlumnos","put","JSON","stringify","then","res","catch","e","registrarAsistencia","post","setShow","registroAlumnosCorreo","show","AlertaExito","mensajeError","setMensajeError","agregarAlumno","establecerAlumnos","alum","copia","establecerAlumnosArreglo","formatearAlumnos","arregloAlumnosFormateados","establecerAlumnosCursos","idCursoSeleccionado","cursoEncontrado","find","clonAlumnos","handleBlur","tags","tipo","event","target","value","checked","handleChange","cursoId","handleChangeFecha","nuevoValor","handleFileUpload","reader","FileReader","onload","text","result","respuesta","encontrarCursoCoincidencia","fecha","err","readAsText","files","nombreCurso","i","trim","RegistroAlumnos","idx"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AAEA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAO,4CAAP;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAClC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,UAAU,CAACI,cAAD,CAAxC;AACA,QAAM,CAACa,MAAD,EAASC,aAAT,IAA0BlB,UAAU,CAACK,aAAD,CAA1C;AACA,QAAM,CAACc,WAAD,EAAcC,kBAAd,IAAoCpB,UAAU,CAACM,kBAAD,CAApD;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEwB,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCjB,OAAO,EAAlD;AACA,QAAM,CAACkB,iBAAD,EAAoBC,oBAApB,IAA4C5B,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAAC6B,iBAAD,EAAoBC,oBAApB,IAA4C9B,QAAQ,CAAC,IAAI+B,IAAJ,EAAD,CAA1D;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCjC,QAAQ,CAAC,IAAI+B,IAAJ,EAAD,CAAlD;AACA,QAAMG,OAAO,GAAG/B,MAAM,CAAC,IAAD,CAAtB;;AAEA,QAAMgC,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,KAAK,CAACE,GAAN,CAAUC,MAAM,IAAIF,QAAQ,CAACG,IAAT,CAAc,CAACD,MAAM,CAACE,MAAR,EAAgBF,MAAM,CAACG,UAAvB,CAAd,CAApB;AACA,WAAOL,QAAP;AACH,GAJD;;AAMA,QAAMM,sBAAsB,GAAIP,KAAD,IAAW;AACtC,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAInB,MAAM,IAAI0B,SAAV,IAAuB1B,MAAM,CAAC2B,MAAP,GAAgB,CAA3C,EAA8C;AAC1C,YAAMC,kBAAkB,GAAG5B,MAAM,CAACS,iBAAD,CAAN,CAA0BL,OAArD;AACA,YAAMyB,yBAAyB,GAAG,EAAlC;AACAD,MAAAA,kBAAkB,CAACE,OAAnB,CAA2BC,OAAO,IAAI;AAClCF,QAAAA,yBAAyB,CAACP,IAA1B,CAA+BS,OAAO,CAACR,MAAvC;AACH,OAFD;AAGAL,MAAAA,KAAK,CAACY,OAAN,CAAcC,OAAO,IAAI;AACrB,YAAI,CAACF,yBAAyB,CAACG,QAA1B,CAAmCD,OAAO,CAACR,MAA3C,CAAL,EAAyD;AACrDJ,UAAAA,QAAQ,CAACG,IAAT,CAAc;AAAEC,YAAAA,MAAM,EAAEF,MAAM,CAACE,MAAjB;AAAyBU,YAAAA,KAAK,EAAE;AAAhC,WAAd;AACH;AACJ,OAJD;AAKH;;AACD,WAAOd,QAAP;AACH,GAfD;;AAiBA,QAAMe,wBAAwB,GAAG,CAACC,KAAD,EAAQC,eAAR,KAA4B;AACzD,UAAMC,YAAY,GAAG,CAAC,GAAGjC,OAAJ,CAArB;AACA,UAAMkC,kBAAkB,GAAG,EAA3B;AAEAD,IAAAA,YAAY,CAACP,OAAb,CAAqBT,MAAM,IAAI;AAC3BiB,MAAAA,kBAAkB,CAAChB,IAAnB,CAAwBD,MAAM,CAACE,MAA/B;AACH,KAFD;AAIAgB,IAAAA,wBAAwB,CAACT,OAAzB,CAAiCU,eAAe,IAAI;AAChD,UAAI,CAACF,kBAAkB,CAACN,QAAnB,CAA4BQ,eAAe,CAACjB,MAA5C,CAAL,EAA0D;AACtDc,QAAAA,YAAY,CAACf,IAAb,CAAkBkB,eAAlB;AACH,OAFD,MAEO;AACHH,QAAAA,YAAY,CAACP,OAAb,CAAqBC,OAAO,IAAI;AAC5B,cAAIA,OAAO,CAACR,MAAR,IAAkBiB,eAAe,CAACjB,MAAtC,EAA8C;AAC1CQ,YAAAA,OAAO,CAACP,UAAR,GAAqBgB,eAAe,CAAChB,UAArC;AACH;AACJ,SAJD;AAKH;AACJ,KAVD;AAYAnB,IAAAA,UAAU,CAACgC,YAAD,CAAV;AACH,GArBD;;AAuBA,QAAMI,cAAc,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjC,QAAIA,GAAG,CAAChB,MAAJ,IAAc,CAAlB,EAAqB,OAAO,KAAP;AACrB,QAAIe,GAAG,CAACf,MAAJ,IAAc,CAAlB,EAAqB,OAAO,KAAP;AACrB,WAAO,IAAP;AACH,GAJD;;AAMA,QAAMiB,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC7B,QAAIC,sBAAsB,GAAG,EAA7B;;AACA,QAAIrC,iBAAiB,CAACkB,MAAlB,IAA4B,CAAhC,EAAmC;AAC/B,UAAI3B,MAAM,CAAC2B,MAAP,GAAgB,CAApB,EAAuB;AACnBmB,QAAAA,sBAAsB,GAAG9C,MAAM,CAAC,CAAD,CAAN,CAAU+C,GAAnC;AACH;AACJ,KAJD,MAIO;AACHD,MAAAA,sBAAsB,GAAGrC,iBAAzB;AACH;;AACD,UAAMuC,oBAAoB,GAAG,CAACN,GAAD,EAAMO,IAAN,KAAe;AACxC,UAAI,CAACR,cAAc,CAACC,GAAD,EAAMO,IAAN,CAAnB,EAAgC;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAC,QAAAA,mBAAmB;AACnB,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH,KAPD;;AASA,QAAIJ,oBAAoB,CAACF,sBAAD,EAAyB1C,OAAzB,CAAxB,EAA2D;AACvD,YAAMe,QAAQ,GAAGF,eAAe,CAACb,OAAD,CAAhC;AACA,YAAMoB,UAAU,GAAG;AACf,mBAAWsB,sBADI;AAEf,iBAASnC,iBAFM;AAGf,oBAAYQ;AAHG,OAAnB;AAKA+B,MAAAA,OAAO,CAACC,GAAR,CAAY3B,UAAZ;;AAEA,YAAM6B,qBAAqB,GAAG,OAAOC,OAAP,EAAgBC,cAAhB,KAAmC;AAC7D/D,QAAAA,KAAK,CAACgE,GAAN,CAAU,4CAAV,EAAwD;AAAE,mBAASF,OAAX;AAAoB,qBAAWG,IAAI,CAACC,SAAL,CAAeH,cAAf;AAA/B,SAAxD,EACKI,IADL,CACUC,GAAG,IAAI;AACTV,UAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACA3D,UAAAA,aAAa;AAChB,SAJL,EAKK4D,KALL,CAKWC,CAAC,IAAI;AACRZ,UAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;AACAZ,UAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAC,UAAAA,mBAAmB;AACtB,SATL;AAUH,OAXD;;AAaA,YAAMW,mBAAmB,GAAG,MAAM;AAC9BvE,QAAAA,KAAK,CAACwE,IAAN,CAAW,uCAAX,EAAoDxC,UAApD,EACKmC,IADL,CACUC,GAAG,IAAI;AACTK,UAAAA,OAAO,CAAC,IAAD,CAAP;AACA9D,UAAAA,kBAAkB;AAClB,gBAAM+D,qBAAqB,GAAGzC,sBAAsB,CAACrB,OAAD,CAApD;AACAiD,UAAAA,qBAAqB,CAACP,sBAAD,EAAyBoB,qBAAzB,CAArB;AACAhB,UAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACH,SAPL,EAQKC,KARL,CAQWC,CAAC,IAAI;AACRV,UAAAA,mBAAmB;AACnBF,UAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;AACH,SAXL;AAYH,OAbD;;AAcAC,MAAAA,mBAAmB;AACtB;AACJ,GAxDD;;AA0DA,QAAM,CAACI,IAAD,EAAOF,OAAP,IAAkBnF,QAAQ,CAAC,KAAD,CAAhC;;AACA,WAASsF,WAAT,GAAuB;AACnB,QAAID,IAAJ,EAAU;AACN,0BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAyB,QAAA,OAAO,EAAE,MAAMF,OAAO,CAAC,KAAD,CAA/C;AAAwD,QAAA,WAAW,MAAnE;AAAA,+BACI,QAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AACD,wBAAQ;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;;AACD,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCxF,QAAQ,CAAC,EAAD,CAAhD;;AACA,QAAMsE,mBAAmB,GAAG,MAAM;AAC9BkB,IAAAA,eAAe,CAAC,wBAAD,CAAf;AACH,GAFD;;AAKA,QAAMC,aAAa,GAAG,MAAM;AACxB,QAAInE,OAAO,CAACuB,MAAR,GAAiB,EAArB,EAAyB;AACrB6C,MAAAA,iBAAiB,CAAC;AAAEjD,QAAAA,MAAM,EAAE,EAAV;AAAcC,QAAAA,UAAU,EAAE;AAA1B,OAAD,CAAjB;AACH,KAFD,MAEO;AACH0B,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH;AACJ,GAND;;AAQA,QAAMqB,iBAAiB,GAAIC,IAAD,IAAU;AAChC,UAAMC,KAAK,GAAG,CAAC,GAAGtE,OAAJ,EAAaqE,IAAb,CAAd;AACApE,IAAAA,UAAU,CAACqE,KAAD,CAAV;AACH,GAHD;;AAKA,QAAMC,wBAAwB,GAAIpC,wBAAD,IAA8B;AAC3D,UAAMF,YAAY,GAAG,CAAC,GAAGjC,OAAJ,CAArB;AACA,UAAMkC,kBAAkB,GAAG,EAA3B;AAEAD,IAAAA,YAAY,CAACP,OAAb,CAAqBT,MAAM,IAAI;AAC3BiB,MAAAA,kBAAkB,CAAChB,IAAnB,CAAwBD,MAAM,CAACE,MAA/B;AACH,KAFD;AAIAgB,IAAAA,wBAAwB,CAACT,OAAzB,CAAiCU,eAAe,IAAI;AAChD,UAAI,CAACF,kBAAkB,CAACN,QAAnB,CAA4BQ,eAAe,CAACjB,MAA5C,CAAL,EAA0D;AACtDc,QAAAA,YAAY,CAACf,IAAb,CAAkBkB,eAAlB;AACH,OAFD,MAEO;AACHH,QAAAA,YAAY,CAACP,OAAb,CAAqBC,OAAO,IAAI;AAC5B,cAAIA,OAAO,CAACR,MAAR,IAAkBiB,eAAe,CAACjB,MAAtC,EAA8C;AAC1CQ,YAAAA,OAAO,CAACP,UAAR,GAAqBgB,eAAe,CAAChB,UAArC;AACH;AACJ,SAJD;AAKH;AACJ,KAVD;AAYAnB,IAAAA,UAAU,CAACgC,YAAD,CAAV;AACH,GArBD;;AAuBA,QAAMuC,gBAAgB,GAAIrB,cAAD,IAAoB;AACzC,UAAMsB,yBAAyB,GAAG,EAAlC;AACAtB,IAAAA,cAAc,CAACzB,OAAf,CAAuBC,OAAO,IAAI;AAC9B8C,MAAAA,yBAAyB,CAACvD,IAA1B,CAA+B;AAAEC,QAAAA,MAAM,EAAEQ,OAAO,CAACR,MAAlB;AAA0BC,QAAAA,UAAU,EAAE;AAAtC,OAA/B;AACH,KAFD;AAGA,WAAOqD,yBAAP;AACH,GAND;;AAQA,QAAMC,uBAAuB,GAAG,MAAM;AAClC,QAAIrE,iBAAiB,IAAI,EAAzB,EAA6B;AACzB,YAAMsE,mBAAmB,GAAGtE,iBAA5B;AACA,YAAMuE,eAAe,GAAGhF,MAAM,CAACiF,IAAP,CAAY9C,KAAK,IAAIA,KAAK,CAACY,GAAN,IAAagC,mBAAlC,CAAxB;AACA,YAAMF,yBAAyB,GAAGD,gBAAgB,CAACI,eAAe,CAAC5E,OAAjB,CAAlD;AACA,YAAM8E,WAAW,GAAG,CAAC,GAAGL,yBAAJ,CAApB;AACAxE,MAAAA,UAAU,CAAC6E,WAAD,CAAV;AACH,KAND,MAMO;AACH,UAAIlF,MAAM,CAAC2B,MAAP,GAAgB,CAApB,EAAuB;AACnB,cAAMqD,eAAe,GAAGhF,MAAM,CAAC,CAAD,CAA9B;AACA,cAAM6E,yBAAyB,GAAGD,gBAAgB,CAACI,eAAe,CAAC5E,OAAjB,CAAlD;AACA,cAAM8E,WAAW,GAAG,CAAC,GAAGL,yBAAJ,CAApB;AACAxE,QAAAA,UAAU,CAAC6E,WAAD,CAAV;AACH;AAEJ;AACJ,GAhBD;;AAkBA,QAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAiBC,KAAD,IAAW;AAC1C,UAAMZ,KAAK,GAAGtE,OAAd;;AACA,QAAIiF,IAAI,IAAI,CAAZ,EAAe;AACX,YAAM9D,MAAM,GAAG+D,KAAK,CAACC,MAAN,CAAaC,KAA5B;AACAd,MAAAA,KAAK,CAACU,IAAD,CAAL,CAAY7D,MAAZ,GAAqBA,MAArB;AACH,KAHD,MAGO;AACH,UAAIC,UAAU,GAAG,KAAjB;;AACA,UAAI8D,KAAK,CAACC,MAAN,CAAaE,OAAjB,EAA0B;AACtBjE,QAAAA,UAAU,GAAG,IAAb;AACH;;AACDkD,MAAAA,KAAK,CAACU,IAAD,CAAL,CAAY5D,UAAZ,GAAyBA,UAAzB;AACH;;AACDnB,IAAAA,UAAU,CAACqE,KAAD,CAAV;AACH,GAbD;;AAeA,QAAMgB,YAAY,GAAIJ,KAAD,IAAW;AAC5B,UAAMK,OAAO,GAAGL,KAAK,CAACC,MAAN,CAAaC,KAA7B;;AACA,QAAIG,OAAO,IAAIlF,iBAAf,EAAkC;AAC9BC,MAAAA,oBAAoB,CAACiF,OAAD,CAApB;AACH;AACJ,GALD;;AAOA,QAAMC,iBAAiB,GAAIC,UAAD,IAAgB;AACtCjF,IAAAA,oBAAoB,CAACiF,UAAD,CAApB;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAOhC,CAAP,IAAa;AAClC,UAAMiC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,MAAOnC,CAAP,IAAa;AACzB,YAAMoC,IAAI,GAAIpC,CAAC,CAACyB,MAAF,CAASY,MAAvB;AACAzG,MAAAA,SAAS,CAACwG,IAAD,CAAT,CACKvC,IADL,CACWd,IAAD,IAAU;AACZlD,QAAAA,YAAY,CAACkD,IAAD,CAAZ,CAAmBc,IAAnB,CAAyByC,SAAD,IAAe;AACnCC,UAAAA,0BAA0B,CAACD,SAAS,CAACjE,KAAX,CAA1B;AACAvB,UAAAA,oBAAoB,CAACwF,SAAS,CAACE,KAAX,CAApB;AACA3B,UAAAA,wBAAwB,CAACyB,SAAS,CAAChG,OAAX,CAAxB;AACH,SAJD;AAKH,OAPL,EAQKyD,KARL,CAQY0C,GAAD,IAAS;AACZrD,QAAAA,OAAO,CAACC,GAAR,CAAYoD,GAAZ;AACH,OAVL;AAWH,KAbD;;AAeAR,IAAAA,MAAM,CAACS,UAAP,CAAkB1C,CAAC,CAACyB,MAAF,CAASkB,KAAT,CAAe,CAAf,CAAlB;AACH,GAlBD;;AAoBA,QAAMJ,0BAA0B,GAAIK,WAAD,IAAiB;AAChD,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3G,MAAM,CAAC2B,MAA3B,EAAmCgF,CAAC,EAApC,EAAwC;AACpC,UAAI3G,MAAM,CAAC2G,CAAD,CAAN,CAAUpF,MAAV,CAAiBqF,IAAjB,MAA2BF,WAA/B,EAA4C;AACxChG,QAAAA,oBAAoB,CAACV,MAAM,CAAC2G,CAAD,CAAN,CAAU5D,GAAX,CAApB;AACH;AACJ;AACJ,GAND;;AAQA,QAAM8D,eAAe,GAAG,MAAM;AAC1B,wBACI;AAAA,gBACIzG,OAAO,CAACgB,GAAR,CAAY,CAACC,MAAD,EAASyF,GAAT,kBACR;AAAA,gCACI;AAAA,iCACI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,SAAS,EAAC,kBAFd;AAGI,YAAA,MAAM,EAAE3B,UAAU,CAAC2B,GAAD,EAAM,CAAN,CAHtB;AAII,YAAA,EAAE,EAAG,QAAOA,GAAI,EAJpB;AAKI,YAAA,YAAY,EAAEzF,MAAM,CAACE;AALzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAA,iCACI,QAAC,IAAD,CAAM,KAAN;AACI,YAAA,MAAM,MADV;AAEI,YAAA,EAAE,EAAG,YAAWuF,GAAI,EAFxB;AAGI,YAAA,MAAM,EAAE3B,UAAU,CAAC2B,GAAD,EAAM,CAAN,CAHtB;AAII,YAAA,cAAc,EAAEzF,MAAM,CAACG;AAJ3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA,SAASsF,GAAT;AAAA;AAAA;AAAA;AAAA,cADJ;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAwBH,GAzBD;;AA2BA9H,EAAAA,SAAS,CAAC8F,uBAAD,EAA0B,CAACrE,iBAAD,CAA1B,CAAT;AACAzB,EAAAA,SAAS,CAAC6H,eAAD,EAAkB,CAACzG,OAAD,CAAlB,CAAT;AAEA,sBAEI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEG,YAAY,CAACqC,QAAD,CAA5B;AAAwC,MAAA,EAAE,EAAC,mBAA3C;AAA+D,MAAA,GAAG,EAAE5B,OAApE;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAC,mBAAf;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,EAAE,EAAC,QAAjB;AAA0B,UAAA,KAAK,EAAEP,iBAAjC;AAAoD,UAAA,QAAQ,EAAEiF,YAA9D;AAAA,oBACK1F,MAAM,CAACoB,GAAP,CAAW,CAACe,KAAD,EAAQ2E,GAAR,kBACR;AAAwB,YAAA,KAAK,EAAE3E,KAAK,CAACY,GAArC;AAAA,sBAA2CZ,KAAK,CAACZ;AAAjD,aAAaY,KAAK,CAACY,GAAnB;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAC,mBAAf;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,EAAE,EAAC,QAAjB;AAA0B,UAAA,MAAM,MAAhC;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAsBI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAC,oBAAf;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,EAAE,EAAC,QAAjB;AAA0B,UAAA,MAAM,MAAhC;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ,eA6BI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BJ,eA8BI;AAAA;AAAA;AAAA;AAAA,cA9BJ,eA+BI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEpC,iBAAjB;AAAoC,QAAA,QAAQ,EAAEiF,iBAA9C;AAAiE,QAAA,aAAa,EAAE9E;AAAhF;AAAA;AAAA;AAAA;AAAA,cA/BJ,eAgCI;AAAA;AAAA;AAAA;AAAA,cAhCJ,eAiCI;AAAA;AAAA;AAAA;AAAA,cAjCJ,eAmCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCJ,eAqCI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,EAAE,EAAC,eAA5B;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA,iCACI;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArCJ,eA8CI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEyD,aAAjB;AAAgC,QAAA,OAAO,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9CJ,eAgDI;AAAA;AAAA;AAAA;AAAA,cAhDJ,eAiDI;AAAA;AAAA;AAAA;AAAA,cAjDJ,eAmDI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,EAAE,EAAC,uBAAd;AAAA,kCACI,QAAC,IAAD,CAAM,IAAN,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,IAAN,CAAW,KAAX;AAAiB,YAAA,IAAI,EAAC,MAAtB;AAA6B,YAAA,MAAM,EAAC,MAApC;AAA2C,YAAA,QAAQ,EAAEuB;AAArD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAnDJ,eA0DI;AAAK,QAAA,SAAS,EAAC,sDAAf;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC,sBAA3B;AAAkD,UAAA,SAAS,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA1DJ,eA8DI;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA,kBAAsBzB;AAAtB;AAAA;AAAA;AAAA;AAAA,cA9DJ,eA+DI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cA/DJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAyEH;;GArWuBxE,W;UAKuBN,O;;;KALvBM,W","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\nimport { UsuarioContext } from \"../../contexts/UsuarioContext\";\r\nimport { CursosContext } from \"../../contexts/CursosContext\";\r\nimport { AsistenciasContext } from \"../../contexts/AsistenciasContext\";\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport { cargarCsv } from './csvParser';\r\nimport { filtrarDatos } from './filtrarDatosAsistencia';\r\n\r\nimport { Calendar } from './calendar.component';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default function Asistencias() {\r\n    const [usuario, setUsuario] = useContext(UsuarioContext);\r\n    const [cursos, obtenerCursos] = useContext(CursosContext);\r\n    const [asistencias, obtenerAsistencias] = useContext(AsistenciasContext);\r\n    const [alumnos, setAlumnos] = useState([]);\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [cursoSeleccionado, setCursoSeleccionado] = useState('');\r\n    const [fechaSeleccionada, setFechaSeleccionada] = useState(new Date());\r\n    const [nuevaFechaCsv, setNuevaFechaCsv] = useState(new Date());\r\n    const refForm = useRef(null);\r\n\r\n    const prepararArreglo = (datos) => {\r\n        var registro = [];\r\n        datos.map(alumno => registro.push([alumno.nombre, alumno.asistencia]));\r\n        return registro;\r\n    }\r\n\r\n    const prepararArregloCorreos = (datos) => {\r\n        var registro = [];\r\n        if (cursos != undefined && cursos.length > 0) {\r\n            const alumnosRegistrados = cursos[cursoSeleccionado].alumnos;\r\n            const nombresAlumnosRegistrados = [];\r\n            alumnosRegistrados.forEach(element => {\r\n                nombresAlumnosRegistrados.push(element.nombre);\r\n            });\r\n            datos.forEach(element => {\r\n                if (!nombresAlumnosRegistrados.includes(element.nombre)) {\r\n                    registro.push({ nombre: alumno.nombre, email: 'correodefault@gmail.com' });\r\n                }\r\n            });\r\n        }\r\n        return registro;\r\n    }\r\n\r\n    const filtrarAlumnosDuplicados = (curso, registroAlumnos) => {\r\n        const copiaAlumnos = [...alumnos];\r\n        const copiaAlumnosNombre = [];\r\n\r\n        copiaAlumnos.forEach(alumno => {\r\n            copiaAlumnosNombre.push(alumno.nombre);\r\n        });\r\n\r\n        arregloAlumnosImportados.forEach(alumnoImportado => {\r\n            if (!copiaAlumnosNombre.includes(alumnoImportado.nombre)) {\r\n                copiaAlumnos.push(alumnoImportado);\r\n            } else {\r\n                copiaAlumnos.forEach(element => {\r\n                    if (element.nombre == alumnoImportado.nombre) {\r\n                        element.asistencia = alumnoImportado.asistencia;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        setAlumnos(copiaAlumnos);\r\n    }\r\n\r\n    const verificarDatos = (cur, alu) => {\r\n        if (alu.length == 0) return false;\r\n        if (cur.length == 0) return false;\r\n        return true;\r\n    }\r\n\r\n    const onSubmit = async (data) => {\r\n        var cursoSeleccionadoLocal = '';\r\n        if (cursoSeleccionado.length == 0) {\r\n            if (cursos.length > 0) {\r\n                cursoSeleccionadoLocal = cursos[0]._id;\r\n            }\r\n        } else {\r\n            cursoSeleccionadoLocal = cursoSeleccionado;\r\n        }\r\n        const realizarVerificacion = (cur, alus) => {\r\n            if (!verificarDatos(cur, alus)) {\r\n                console.log(\"Datos invalidos\");\r\n                mostrarMensajeError();\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        if (realizarVerificacion(cursoSeleccionadoLocal, alumnos)) {\r\n            const registro = prepararArreglo(alumnos);\r\n            const asistencia = {\r\n                \"idCurso\": cursoSeleccionadoLocal,\r\n                \"fecha\": fechaSeleccionada,\r\n                \"registro\": registro,\r\n            }\r\n            console.log(asistencia);\r\n\r\n            const registarAlumnoEnCurso = async (idCurso, arregloAlumnos) => {\r\n                axios.put('http://localhost:5000/cursos/agregaAlumnos', { \"curso\": idCurso, \"alumnos\": JSON.stringify(arregloAlumnos) })\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        obtenerCursos();\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                        console.log(\"Error en registrar alumno en curso\");\r\n                        mostrarMensajeError();\r\n                    });\r\n            }\r\n\r\n            const registrarAsistencia = () => {\r\n                axios.post('http://localhost:5000/asistencias/add', asistencia)\r\n                    .then(res => {\r\n                        setShow(true);\r\n                        obtenerAsistencias();\r\n                        const registroAlumnosCorreo = prepararArregloCorreos(alumnos);\r\n                        registarAlumnoEnCurso(cursoSeleccionadoLocal, registroAlumnosCorreo);\r\n                        console.log(res);\r\n                    })\r\n                    .catch(e => {\r\n                        mostrarMensajeError();\r\n                        console.log(e);\r\n                    });\r\n            }\r\n            registrarAsistencia();\r\n        }\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n    function AlertaExito() {\r\n        if (show) {\r\n            return (\r\n                <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\r\n                    <Alert.Heading>Registro exitoso</Alert.Heading>\r\n                </Alert>\r\n            );\r\n        }\r\n        return (<div></div>);\r\n    }\r\n    const [mensajeError, setMensajeError] = useState(\"\");\r\n    const mostrarMensajeError = () => {\r\n        setMensajeError(\"Error al agregar curso\");\r\n    }\r\n\r\n\r\n    const agregarAlumno = () => {\r\n        if (alumnos.length < 40) {\r\n            establecerAlumnos({ nombre: '', asistencia: false });\r\n        } else {\r\n            console.log(\"Demasiados alumnos\");\r\n        }\r\n    }\r\n\r\n    const establecerAlumnos = (alum) => {\r\n        const copia = [...alumnos, alum];\r\n        setAlumnos(copia);\r\n    }\r\n\r\n    const establecerAlumnosArreglo = (arregloAlumnosImportados) => {\r\n        const copiaAlumnos = [...alumnos];\r\n        const copiaAlumnosNombre = [];\r\n\r\n        copiaAlumnos.forEach(alumno => {\r\n            copiaAlumnosNombre.push(alumno.nombre);\r\n        });\r\n\r\n        arregloAlumnosImportados.forEach(alumnoImportado => {\r\n            if (!copiaAlumnosNombre.includes(alumnoImportado.nombre)) {\r\n                copiaAlumnos.push(alumnoImportado);\r\n            } else {\r\n                copiaAlumnos.forEach(element => {\r\n                    if (element.nombre == alumnoImportado.nombre) {\r\n                        element.asistencia = alumnoImportado.asistencia;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        setAlumnos(copiaAlumnos);\r\n    }\r\n\r\n    const formatearAlumnos = (arregloAlumnos) => {\r\n        const arregloAlumnosFormateados = [];\r\n        arregloAlumnos.forEach(element => {\r\n            arregloAlumnosFormateados.push({ nombre: element.nombre, asistencia: false })\r\n        });\r\n        return arregloAlumnosFormateados;\r\n    }\r\n\r\n    const establecerAlumnosCursos = () => {\r\n        if (cursoSeleccionado != '') {\r\n            const idCursoSeleccionado = cursoSeleccionado;\r\n            const cursoEncontrado = cursos.find(curso => curso._id == idCursoSeleccionado);\r\n            const arregloAlumnosFormateados = formatearAlumnos(cursoEncontrado.alumnos);\r\n            const clonAlumnos = [...arregloAlumnosFormateados];\r\n            setAlumnos(clonAlumnos);\r\n        } else {\r\n            if (cursos.length > 0) {\r\n                const cursoEncontrado = cursos[0];\r\n                const arregloAlumnosFormateados = formatearAlumnos(cursoEncontrado.alumnos);\r\n                const clonAlumnos = [...arregloAlumnosFormateados];\r\n                setAlumnos(clonAlumnos);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const handleBlur = (tags, tipo) => (event) => {\r\n        const copia = alumnos;\r\n        if (tipo == 0) {\r\n            const nombre = event.target.value;\r\n            copia[tags].nombre = nombre;\r\n        } else {\r\n            var asistencia = false;\r\n            if (event.target.checked) {\r\n                asistencia = true;\r\n            }\r\n            copia[tags].asistencia = asistencia;\r\n        }\r\n        setAlumnos(copia);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const cursoId = event.target.value;\r\n        if (cursoId != cursoSeleccionado) {\r\n            setCursoSeleccionado(cursoId);\r\n        }\r\n    }\r\n\r\n    const handleChangeFecha = (nuevoValor) => {\r\n        setFechaSeleccionada(nuevoValor);\r\n    }\r\n\r\n    const handleFileUpload = async (e) => {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n            const text = (e.target.result);\r\n            cargarCsv(text)\r\n                .then((data) => {\r\n                    filtrarDatos(data).then((respuesta) => {\r\n                        encontrarCursoCoincidencia(respuesta.curso);\r\n                        setFechaSeleccionada(respuesta.fecha);\r\n                        establecerAlumnosArreglo(respuesta.alumnos);\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        };\r\n\r\n        reader.readAsText(e.target.files[0]);\r\n    }\r\n\r\n    const encontrarCursoCoincidencia = (nombreCurso) => {\r\n        for (var i = 0; i < cursos.length; i++) {\r\n            if (cursos[i].nombre.trim() == nombreCurso) {\r\n                setCursoSeleccionado(cursos[i]._id);\r\n            }\r\n        }\r\n    }\r\n\r\n    const RegistroAlumnos = () => {\r\n        return (\r\n            <tbody>{\r\n                alumnos.map((alumno, idx) =>\r\n                    <tr key={idx} >\r\n                        <td>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                className=\"form-control box\"\r\n                                onBlur={handleBlur(idx, 0)}\r\n                                id={`text-${idx}`}\r\n                                defaultValue={alumno.nombre}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <Form.Check\r\n                                custom\r\n                                id={`checkbox-${idx}`}\r\n                                onBlur={handleBlur(idx, 1)}\r\n                                defaultChecked={alumno.asistencia}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                )}</tbody>\r\n        );\r\n    }\r\n\r\n    useEffect(establecerAlumnosCursos, [cursoSeleccionado]);\r\n    useEffect(RegistroAlumnos, [alumnos]);\r\n\r\n    return (\r\n\r\n        <div className=\" container formulario table-dark\">\r\n            <h1>Registro de asistencias</h1>\r\n            <Form onSubmit={handleSubmit(onSubmit)} id=\"forma-asistencias\" ref={refForm}>\r\n                <Form.Group id=\"seleccionar-curso\">\r\n                    <Form.Label>Curso</Form.Label>\r\n                    <Form.Control as=\"select\" value={cursoSeleccionado} onChange={handleChange}>\r\n                        {cursos.map((curso, idx) => (\r\n                            <option key={curso._id} value={curso._id}>{curso.nombre}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                    {/* <select value={cursoSeleccionado} onChange={handleChange} >\r\n                        {cursos.map((curso, idx) => (\r\n                            <option key={curso._id} value={curso._id}>{curso.nombre}</option>\r\n                        ))}\r\n                    </select> */}\r\n                </Form.Group>\r\n\r\n                <Form.Group id=\"seleccionar-grupo\">\r\n                    <Form.Label>Grupo</Form.Label>\r\n                    <Form.Control as=\"select\" custom>\r\n                        <option>Seleccione un grupo...</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group id=\"seleccionar-unidad\">\r\n                    <Form.Label>Unidad</Form.Label>\r\n                    <Form.Control as=\"select\" custom>\r\n                        <option>Seleccione una unidad...</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Label>Fecha</Form.Label>\r\n                <br />\r\n                <Calendar value={fechaSeleccionada} onChange={handleChangeFecha} nuevaFechaCsv={nuevaFechaCsv} />\r\n                <br />\r\n                <br />\r\n\r\n                <h3>Registro</h3>\r\n\r\n                <table className=\"table\" id=\"tablaRegistro\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th scope=\"col\">Alumno</th>\r\n                            <th scope=\"col\">Asistencia</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <RegistroAlumnos />\r\n                </table>\r\n                <Button onClick={agregarAlumno} variant=\"dark\">Aniadir alumno</Button>\r\n\r\n                <br />\r\n                <br />\r\n\r\n                <div className=\"mb-3\">\r\n                    <Form.File id=\"formcheck-api-regular\">\r\n                        <Form.File.Label>Generar asistencia con CSV</Form.File.Label>\r\n                        <Form.File.Input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\r\n                    </Form.File>\r\n                </div>\r\n\r\n                <div className=\"form-group d-flex flex-column justify-content-center\">\r\n                    <input type=\"submit\" value=\"Registrar asistencia\" className=\"btn btn-secondary\"></input>\r\n                </div>\r\n\r\n                <p className=\"error\">{mensajeError}</p>\r\n                <AlertaExito />\r\n            </Form>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}