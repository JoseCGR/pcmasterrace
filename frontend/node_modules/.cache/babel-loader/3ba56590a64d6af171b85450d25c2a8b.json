{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jonatan\\\\Desktop\\\\Metodos Agiles\\\\AppAsistencias\\\\app-asistencias\\\\frontend\\\\src\\\\components\\\\cursos\\\\registrarCurso.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { UsuarioContext } from \"../auth/UsuarioContext\";\nimport axios from 'axios';\nimport { useForm } from 'react-hook-form';\nexport default function Cursos() {\n  _s();\n\n  const [usuario, setUsuario] = useContext(UsuarioContext);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [mensajeError, setMensajeError] = useState(\"\");\n\n  const mostrarMensajeError = () => {\n    setMensajeError(\"Error al agregar curso\");\n  };\n\n  const onSubmit = data => {\n    const curso = {\n      \"semestre\": data.semestre,\n      \"nombre\": data.nombre,\n      \"clave\": data.clave,\n      \"unidades\": data.unidades\n    };\n\n    const registarCurso = () => {\n      axios.post('http://localhost:5000/cursos/add', curso).then(res => {\n        console.log(res);\n        asignarCursoAUsuario(usuario._id, res);\n      }).catch(e => {\n        console.log(e);\n        mostrarMensajeError();\n      });\n    };\n\n    const asignarCursoAUsuario = async (idUsuario, res) => {\n      axios.post('http://localhost:5000/usuarios/relCurso', {\n        \"usuario\": idUsuario,\n        \"curso\": res\n      }).then(res => {\n        console.log(res);\n      }).catch(e => {\n        console.log(e);\n        mostrarMensajeError();\n      });\n    };\n\n    borrarCampos = () => {\n      document.getElementById(\"forma-cursos\").reset();\n    };\n\n    registarCurso();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formulario\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Registro de nuevo curso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"forma-cursos\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group d-flex flex-column justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Semestre: Ago-Dic 2020\",\n            className: \"form-control box\",\n            name: \"semestre\",\n            ref: register({\n              required: \"*Semestre requerido\",\n              minLength: {\n                value: 4,\n                message: \"Min 4 caracteres\"\n              },\n              maxLength: {\n                value: 20,\n                message: \"Max 20 caracteres\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), errors.semestre && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.semestre.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Nombre: Programacion I\",\n            className: \"form-control box\",\n            name: \"nombre\",\n            ref: register({\n              required: \"*Nombre requerido\",\n              minLength: {\n                value: 4,\n                message: \"Min 4 caracteres\"\n              },\n              maxLength: {\n                value: 20,\n                message: \"Max 20 caracteres\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), errors.nombre && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.nombre.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Clave: PRO-1234\",\n            className: \"form-control box\",\n            name: \"clave\",\n            ref: register({\n              required: \"*Clave requerida\",\n              minLength: {\n                value: 4,\n                message: \"Min 4 caracteres\"\n              },\n              maxLength: {\n                value: 15,\n                message: \"Max 15 caracteres\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), errors.clave && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.clave.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Unidades: 3\",\n            className: \"form-control box\",\n            name: \"unidades\",\n            ref: register({\n              required: \"*Unidades requeridas\",\n              maxLength: {\n                value: 1,\n                message: \"Unidades no mayor a 10\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), errors.unidades && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.unidades.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group d-flex flex-column justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Registrar curso\",\n            className: \"btn btn-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: mensajeError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cursos, \"hoFeKeHZGJ3eHv7D7dgnBAW3aa0=\", false, function () {\n  return [useForm];\n});\n\n_c = Cursos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cursos\");","map":{"version":3,"sources":["C:/Users/Jonatan/Desktop/Metodos Agiles/AppAsistencias/app-asistencias/frontend/src/components/cursos/registrarCurso.component.js"],"names":["React","useContext","useState","UsuarioContext","axios","useForm","Cursos","usuario","setUsuario","register","handleSubmit","errors","mensajeError","setMensajeError","mostrarMensajeError","onSubmit","data","curso","semestre","nombre","clave","unidades","registarCurso","post","then","res","console","log","asignarCursoAUsuario","_id","catch","e","idUsuario","borrarCampos","document","getElementById","reset","required","minLength","value","message","maxLength"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport {UsuarioContext} from \"../auth/UsuarioContext\";\r\nimport axios from 'axios';\r\nimport {useForm} from 'react-hook-form'\r\n\r\n\r\nexport default function Cursos () {\r\n    const [usuario, setUsuario] = useContext(UsuarioContext);\r\n    const {register, handleSubmit, errors} = useForm();  \r\n    const [mensajeError, setMensajeError] = useState(\"\");\r\n\r\n    const mostrarMensajeError = ()=>{\r\n        setMensajeError(\"Error al agregar curso\");\r\n    }\r\n\r\n    const onSubmit = (data) => {        \r\n        const curso = {\r\n            \"semestre\":data.semestre,\r\n            \"nombre\":data.nombre,\r\n            \"clave\":data.clave,\r\n            \"unidades\":data.unidades,\r\n        }        \r\n        const registarCurso = ()=>{\r\n            axios.post('http://localhost:5000/cursos/add', curso)\r\n            .then(res => {                \r\n                console.log(res);\r\n                asignarCursoAUsuario(usuario._id, res);          \r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                mostrarMensajeError();\r\n            });\r\n        }       \r\n\r\n        const asignarCursoAUsuario = async (idUsuario,res)=>{\r\n            axios.post('http://localhost:5000/usuarios/relCurso', {\"usuario\":idUsuario, \"curso\":res})\r\n            .then(res => {                \r\n                console.log(res);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                mostrarMensajeError();\r\n            });\r\n        }   \r\n\r\n        borrarCampos = () => { \r\n            document.getElementById(\"forma-cursos\").reset();\r\n          }\r\n        \r\n        registarCurso();\r\n \r\n    }\r\n\r\n    return (\r\n        <div className=\"wrap\">\r\n            <div className=\"formulario\">\r\n                <h1>Registro de nuevo curso</h1>\r\n                <form id=\"forma-cursos\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"form-group d-flex flex-column justify-content-center\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Semestre: Ago-Dic 2020\" \r\n                            className=\"form-control box\" \r\n                            name=\"semestre\"\r\n                            ref={register({required:\"*Semestre requerido\", minLength:{value:4, message:\"Min 4 caracteres\"}, maxLength:{value:20, message:\"Max 20 caracteres\"}})}\r\n                        ></input>\r\n                        {errors.semestre && <p className=\"error\">{errors.semestre.message}</p>}\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Nombre: Programacion I\" \r\n                            className=\"form-control box\" \r\n                            name=\"nombre\"\r\n                            ref={register({required:\"*Nombre requerido\", minLength:{value:4, message:\"Min 4 caracteres\"}, maxLength:{value:20, message:\"Max 20 caracteres\"}})}\r\n                        ></input>\r\n                        {errors.nombre && <p className=\"error\">{errors.nombre.message}</p>}\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Clave: PRO-1234\" \r\n                            className=\"form-control box\" \r\n                            name=\"clave\"\r\n                            ref={register({required:\"*Clave requerida\", minLength:{value:4, message:\"Min 4 caracteres\"}, maxLength:{value:15, message:\"Max 15 caracteres\"}})}\r\n                        ></input>\r\n                        {errors.clave && <p className=\"error\">{errors.clave.message}</p>}\r\n                        <input \r\n                            type=\"number\" \r\n                            placeholder=\"Unidades: 3\" \r\n                            className=\"form-control box\" \r\n                            name=\"unidades\"\r\n                            ref={register({required:\"*Unidades requeridas\", maxLength:{value:1, message:\"Unidades no mayor a 10\"}})}\r\n                        ></input>\r\n                        {errors.unidades && <p className=\"error\">{errors.unidades.message}</p>}\r\n                    </div>\r\n                    <div className=\"form-group d-flex flex-column justify-content-center\">\r\n                        <input type=\"submit\" value=\"Registrar curso\" className=\"btn btn-primary\"></input>\r\n                    </div>\r\n                </form>\r\n                <p className=\"error\">{mensajeError}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}