{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jonatan\\\\Desktop\\\\Metodos Agiles\\\\AppAsistencias\\\\app-asistencias\\\\frontend\\\\src\\\\components\\\\asistencias\\\\listarAsistencias.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { UsuarioContext } from \"../../contexts/UsuarioContext\";\nimport { CursosContext } from \"../../contexts/CursosContext\";\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { useFieldArray } from 'react-hook-form';\nexport default function Asistencias() {\n  _s();\n\n  const [usuario, setUsuario] = useContext(UsuarioContext);\n  const [cursos, setCursos] = useContext(CursosContext);\n  const [asistencias, setAsistencias] = useState([{}]);\n  const history = useHistory();\n\n  const obtenerAsistencias = () => {\n    if (cursos != undefined) {\n      let arregloCursos = [];\n      cursos.map(curso => {\n        axios.get('http://localhost:5000/asistencias/obtenerAsistencias/', {\n          headers: {\n            authorization: curso._id\n          }\n        }).then(res => {\n          console.log(res.data);\n          arregloCursos.push(res.data); //establecerAsistencias(res.data);\n        }).catch(e => {\n          console.log(e);\n        });\n      });\n      console.log(arregloCursos);\n    }\n  };\n\n  function establecerAsistencias(asistencias) {\n    setAsistencias(asistencias);\n  }\n\n  function encontrarCurso(idCurso) {\n    return cursos.find(curso => curso._id == idCurso);\n  } //HACER CONTEXT DE CURSOS\n\n\n  useEffect(obtenerAsistencias, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto table-dark\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Asistencias: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Curso\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Alumno\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: asistencias.map((asistencia, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: encontrarCurso(asistencia._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: asistencia.fecha\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this), asistencia.registro.map((reg, idx) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: reg\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 49\n              }, this);\n            })]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Asistencias, \"ewdZ5cczN1vYPMAfIN1A4JYeR48=\", false, function () {\n  return [useHistory];\n});\n\n_c = Asistencias;\n\nvar _c;\n\n$RefreshReg$(_c, \"Asistencias\");","map":{"version":3,"sources":["C:/Users/Jonatan/Desktop/Metodos Agiles/AppAsistencias/app-asistencias/frontend/src/components/asistencias/listarAsistencias.component.js"],"names":["React","useContext","useState","useEffect","UsuarioContext","CursosContext","axios","useHistory","useFieldArray","Asistencias","usuario","setUsuario","cursos","setCursos","asistencias","setAsistencias","history","obtenerAsistencias","undefined","arregloCursos","map","curso","get","headers","authorization","_id","then","res","console","log","data","push","catch","e","establecerAsistencias","encontrarCurso","idCurso","find","asistencia","idx","fecha","registro","reg"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { UsuarioContext } from \"../../contexts/UsuarioContext\";\r\nimport { CursosContext } from \"../../contexts/CursosContext\";\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFieldArray } from 'react-hook-form';\r\n\r\nexport default function Asistencias() {\r\n    const [usuario, setUsuario] = useContext(UsuarioContext);\r\n    const [cursos, setCursos] = useContext(CursosContext);\r\n    const [asistencias, setAsistencias] = useState([{}]);\r\n\r\n    const history = useHistory();\r\n\r\n    const obtenerAsistencias = () => {\r\n        if (cursos != undefined) {\r\n            let arregloCursos = [];\r\n            cursos.map((curso) => {\r\n                axios.get('http://localhost:5000/asistencias/obtenerAsistencias/', { headers: { authorization: curso._id } })\r\n                    .then(res => {\r\n                        console.log(res.data);\r\n                        arregloCursos.push(res.data);\r\n                        //establecerAsistencias(res.data);\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    })\r\n            });\r\n            console.log(arregloCursos);\r\n        }\r\n    }\r\n\r\n    function establecerAsistencias(asistencias) {\r\n        setAsistencias(asistencias);\r\n    }\r\n\r\n    function encontrarCurso(idCurso) {\r\n        return cursos.find(curso => curso._id == idCurso);\r\n    }\r\n    //HACER CONTEXT DE CURSOS\r\n    useEffect(obtenerAsistencias, []);\r\n\r\n    return (\r\n        <div className=\"mx-auto table-dark\" >\r\n            <h1>Asistencias: </h1>\r\n            <table className=\"table\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Curso</th>\r\n                        <th scope=\"col\">Fecha</th>\r\n                        <th scope=\"col\">Alumno</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        asistencias.map((asistencia, idx) => {\r\n                            return (\r\n                                <tr key={idx}>\r\n                                    <td>{encontrarCurso(asistencia._id)}</td>\r\n                                    <td>{asistencia.fecha}</td>\r\n                                    {\r\n                                        asistencia.registro.map((reg, idx) => {\r\n                                            return (\r\n                                                <tr key={idx}>{reg}</tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}