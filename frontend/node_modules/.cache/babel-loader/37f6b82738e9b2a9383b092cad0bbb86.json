{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jonatan\\\\Desktop\\\\Metodos Agiles\\\\AppAsistencias\\\\app-asistencias\\\\frontend\\\\src\\\\components\\\\asistencias\\\\registrarAsistencias.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { UsuarioContext } from \"../../contexts/UsuarioContext\";\nimport { CursosContext } from \"../../contexts/CursosContext\";\nimport Button from 'react-bootstrap/Button';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport Alert from 'react-bootstrap/Alert';\nimport { cargarCsv } from './csvParser';\nimport { filtrarDatos } from './filtrarDatosAsistencia';\nimport { Calendar } from './calendar.component';\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default function Asistencias() {\n  _s();\n\n  const [usuario, setUsuario] = useContext(UsuarioContext);\n  const [cursos, setCursos] = useContext(CursosContext);\n  const [alumnos, setAlumnos] = useState([]);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [cursoSeleccionado, setCursoSeleccionado] = useState({});\n  const [fechaSeleccionada, setFechaSeleccionada] = useState(new Date());\n  const [nuevaFechaCsv, setNuevaFechaCsv] = useState(new Date());\n  const refForm = useRef(null);\n\n  const prepararArreglo = datos => {\n    var registro = [];\n    datos.map(alumno => registro.push([alumno.nombre, alumno.asistencia]));\n    return registro;\n  };\n\n  const verificarDatos = (cur, alu) => {\n    if (alu.length == 0) return false;\n    if (cur.length == 0) return false;\n    return true;\n  };\n\n  const seleccionarCurso = new Promise((resolve, reject) => {// if (cursos.length > 0 && cursoSeleccionado == '') {\n    //     setCursoSeleccionado(cursos[0]._id);\n    //     resolve(true);\n    // } else {\n    //     resolve(false);\n    // }\n  });\n\n  const onSubmit = data => {\n    const realizarVerificacion = () => {\n      if (!verificarDatos(cursoSeleccionado, alumnos)) {\n        console.log(\"Datos invalidos\");\n        mostrarMensajeError();\n        return false;\n      }\n\n      return true;\n    };\n\n    if (!realizarVerificacion()) return;\n    const registro = prepararArreglo(alumnos);\n    const asistencia = {\n      \"idCurso\": cursoSeleccionado._id,\n      \"fecha\": fechaSeleccionada,\n      \"registro\": registro\n    };\n    console.log(asistencia);\n\n    const registrarAsistencia = () => {\n      axios.post('http://localhost:5000/asistencias/add', asistencia).then(res => {\n        setShow(true);\n        console.log(res);\n      }).catch(e => {\n        mostrarMensajeError();\n        console.log(e);\n      });\n    };\n\n    registrarAsistencia();\n  };\n\n  const [show, setShow] = useState(false);\n\n  function AlertaExito() {\n    if (show) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        onClose: () => setShow(false),\n        dismissible: true,\n        children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: \"Registro exitoso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this);\n  }\n\n  const [mensajeError, setMensajeError] = useState(\"\");\n\n  const mostrarMensajeError = () => {\n    setMensajeError(\"Error al agregar curso\");\n  };\n\n  const agregarAlumno = () => {\n    if (alumnos.length < 40) {\n      establecerAlumnos({\n        nombre: '',\n        asistencia: false\n      });\n    } else {\n      console.log(\"Demasiados alumnos\");\n    }\n  };\n\n  const establecerAlumnos = alum => {\n    const copia = [...alumnos, alum];\n    setAlumnos(copia);\n  };\n\n  const establecerAlumnosArreglo = arregloAlumnosImportados => {\n    var copia = alumnos;\n    copia = copia.concat(arregloAlumnosImportados);\n    setAlumnos(copia);\n  };\n\n  const handleBlur = (tags, tipo) => event => {\n    const copia = alumnos;\n\n    if (tipo == 0) {\n      const nombre = event.target.value;\n      copia[tags].nombre = nombre;\n    } else {\n      var asistencia = false;\n\n      if (event.target.checked) {\n        asistencia = true;\n      }\n\n      copia[tags].asistencia = asistencia;\n    }\n\n    setAlumnos(copia);\n  };\n\n  const handleChange = curso => {\n    console.log(curso.nombre); // if (event.target.value == cursoSeleccionado) {\n    //     console.log('Son los mismos cursos');\n    // } else {\n    //     console.log(event.target.value);\n    //     setCursoSeleccionado(cursos[event.target.value]);\n    //     console.log('Son diferentes cursos');\n    // }\n  };\n\n  const handleChangeFecha = nuevoValor => {\n    setFechaSeleccionada(nuevoValor);\n  };\n\n  const handleFileUpload = async e => {\n    const reader = new FileReader();\n\n    reader.onload = async e => {\n      const text = e.target.result;\n      cargarCsv(text).then(data => {\n        filtrarDatos(data).then(respuesta => {\n          //console.log(respuesta.curso);\n          encontrarCursoCoincidencia(respuesta.curso); //setFechaSeleccionada(respuesta.fecha);\n          //establecerAlumnosArreglo(respuesta.alumnos);\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    reader.readAsText(e.target.files[0]);\n  };\n\n  const encontrarCursoCoincidencia = nombreCurso => {\n    for (var i = 0; i < cursos.length; i++) {\n      if (cursos[i].nombre.trim() == 'PROGRA 4') {\n        console.log('se debio hacer');\n        console.log(cursos[i].nombre + i);\n        setCursoSeleccionado(cursos[i]);\n      }\n    }\n  }; // const cambiarCurso = () => {\n  //     console.log(cursoSeleccionado);\n  //     //setCursoSeleccionado(cursos[2]);\n  // }\n\n\n  const RegistroAlumnos = () => {\n    return /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: alumnos.map((alumno, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            className: \"form-control box\",\n            onBlur: handleBlur(idx, 0),\n            id: `text-${idx}`,\n            defaultValue: alumno.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            custom: true,\n            id: `checkbox-${idx}`,\n            onBlur: handleBlur(idx, 1),\n            defaultChecked: alumno.asistencia\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this);\n  };\n\n  useEffect(RegistroAlumnos, [alumnos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registro de asistencias\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      id: \"forma-asistencias\",\n      ref: refForm,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        id: \"seleccionar-curso\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Curso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          value: cursoSeleccionado,\n          onChange: event => handleChange(event.target.value),\n          children: cursos.map((curso, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: curso,\n            children: curso.nombre\n          }, curso._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        id: \"seleccionar-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Grupo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Seleccione un grupo...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        id: \"seleccionar-unidad\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Unidad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          custom: true,\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Seleccione una unidad...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Fecha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        value: fechaSeleccionada,\n        onChange: handleChangeFecha,\n        nuevaFechaCsv: nuevaFechaCsv\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Registro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        id: \"tablaRegistro\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Alumno\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Asistencia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RegistroAlumnos, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: agregarAlumno,\n        variant: \"dark\",\n        children: \"Aniadir alumno\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.File, {\n          id: \"formcheck-api-regular\",\n          children: [/*#__PURE__*/_jsxDEV(Form.File.Label, {\n            children: \"Generar asistencia con CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.File.Input, {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex flex-column justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Registrar asistencia\",\n          className: \"btn btn-dark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: mensajeError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AlertaExito, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Asistencias, \"X47u1k8eAEO0OhwsAvO69QJNKY8=\", false, function () {\n  return [useForm];\n});\n\n_c = Asistencias;\n\nvar _c;\n\n$RefreshReg$(_c, \"Asistencias\");","map":{"version":3,"sources":["C:/Users/Jonatan/Desktop/Metodos Agiles/AppAsistencias/app-asistencias/frontend/src/components/asistencias/registrarAsistencias.component.js"],"names":["React","useState","useContext","useEffect","useRef","Form","UsuarioContext","CursosContext","Button","useForm","axios","Alert","cargarCsv","filtrarDatos","Calendar","Asistencias","usuario","setUsuario","cursos","setCursos","alumnos","setAlumnos","register","handleSubmit","errors","cursoSeleccionado","setCursoSeleccionado","fechaSeleccionada","setFechaSeleccionada","Date","nuevaFechaCsv","setNuevaFechaCsv","refForm","prepararArreglo","datos","registro","map","alumno","push","nombre","asistencia","verificarDatos","cur","alu","length","seleccionarCurso","Promise","resolve","reject","onSubmit","data","realizarVerificacion","console","log","mostrarMensajeError","_id","registrarAsistencia","post","then","res","setShow","catch","e","show","AlertaExito","mensajeError","setMensajeError","agregarAlumno","establecerAlumnos","alum","copia","establecerAlumnosArreglo","arregloAlumnosImportados","concat","handleBlur","tags","tipo","event","target","value","checked","handleChange","curso","handleChangeFecha","nuevoValor","handleFileUpload","reader","FileReader","onload","text","result","respuesta","encontrarCursoCoincidencia","err","readAsText","files","nombreCurso","i","trim","RegistroAlumnos","idx"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\nimport { UsuarioContext } from \"../../contexts/UsuarioContext\";\r\nimport { CursosContext } from \"../../contexts/CursosContext\";\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport { cargarCsv } from './csvParser';\r\nimport { filtrarDatos } from './filtrarDatosAsistencia';\r\n\r\nimport { Calendar } from './calendar.component';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default function Asistencias() {\r\n    const [usuario, setUsuario] = useContext(UsuarioContext);\r\n    const [cursos, setCursos] = useContext(CursosContext);\r\n    const [alumnos, setAlumnos] = useState([]);\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [cursoSeleccionado, setCursoSeleccionado] = useState({});\r\n    const [fechaSeleccionada, setFechaSeleccionada] = useState(new Date());\r\n    const [nuevaFechaCsv, setNuevaFechaCsv] = useState(new Date());\r\n    const refForm = useRef(null);\r\n\r\n    const prepararArreglo = (datos) => {\r\n        var registro = [];\r\n        datos.map(alumno => registro.push([alumno.nombre, alumno.asistencia]));\r\n        return registro;\r\n    }\r\n\r\n    const verificarDatos = (cur, alu) => {\r\n        if (alu.length == 0) return false;\r\n        if (cur.length == 0) return false;\r\n        return true;\r\n    }\r\n\r\n    const seleccionarCurso = new Promise((resolve, reject) => {\r\n        // if (cursos.length > 0 && cursoSeleccionado == '') {\r\n        //     setCursoSeleccionado(cursos[0]._id);\r\n        //     resolve(true);\r\n        // } else {\r\n        //     resolve(false);\r\n        // }\r\n    })\r\n\r\n    const onSubmit = (data) => {\r\n        const realizarVerificacion = () => {\r\n            if (!verificarDatos(cursoSeleccionado, alumnos)) {\r\n                console.log(\"Datos invalidos\");\r\n                mostrarMensajeError();\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        if (!realizarVerificacion()) return;\r\n\r\n        const registro = prepararArreglo(alumnos);\r\n        const asistencia = {\r\n            \"idCurso\": cursoSeleccionado._id,\r\n            \"fecha\": fechaSeleccionada,\r\n            \"registro\": registro,\r\n        }\r\n        console.log(asistencia);\r\n\r\n        const registrarAsistencia = () => {\r\n            axios.post('http://localhost:5000/asistencias/add', asistencia)\r\n                .then(res => {\r\n                    setShow(true);\r\n                    console.log(res);\r\n                })\r\n                .catch(e => {\r\n                    mostrarMensajeError();\r\n                    console.log(e);\r\n                });\r\n        }\r\n        registrarAsistencia();\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n    function AlertaExito() {\r\n        if (show) {\r\n            return (\r\n                <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\r\n                    <Alert.Heading>Registro exitoso</Alert.Heading>\r\n                </Alert>\r\n            );\r\n        }\r\n        return (<div></div>);\r\n    }\r\n    const [mensajeError, setMensajeError] = useState(\"\");\r\n    const mostrarMensajeError = () => {\r\n        setMensajeError(\"Error al agregar curso\");\r\n    }\r\n\r\n\r\n    const agregarAlumno = () => {\r\n        if (alumnos.length < 40) {\r\n            establecerAlumnos({ nombre: '', asistencia: false });\r\n        } else {\r\n            console.log(\"Demasiados alumnos\");\r\n        }\r\n    }\r\n\r\n    const establecerAlumnos = (alum) => {\r\n        const copia = [...alumnos, alum];\r\n        setAlumnos(copia);\r\n    }\r\n\r\n    const establecerAlumnosArreglo = (arregloAlumnosImportados) => {\r\n        var copia = alumnos;\r\n        copia = copia.concat(arregloAlumnosImportados);\r\n        setAlumnos(copia);\r\n    }\r\n\r\n    const handleBlur = (tags, tipo) => (event) => {\r\n        const copia = alumnos;\r\n        if (tipo == 0) {\r\n            const nombre = event.target.value;\r\n            copia[tags].nombre = nombre;\r\n        } else {\r\n            var asistencia = false;\r\n            if (event.target.checked) {\r\n                asistencia = true;\r\n            }\r\n            copia[tags].asistencia = asistencia;\r\n        }\r\n        setAlumnos(copia);\r\n    }\r\n\r\n    const handleChange = (curso) => {\r\n        console.log(curso.nombre);\r\n        // if (event.target.value == cursoSeleccionado) {\r\n        //     console.log('Son los mismos cursos');\r\n        // } else {\r\n        //     console.log(event.target.value);\r\n        //     setCursoSeleccionado(cursos[event.target.value]);\r\n        //     console.log('Son diferentes cursos');\r\n        // }\r\n\r\n    }\r\n\r\n    const handleChangeFecha = (nuevoValor) => {\r\n        setFechaSeleccionada(nuevoValor);\r\n    }\r\n\r\n    const handleFileUpload = async (e) => {\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n            const text = (e.target.result);\r\n            cargarCsv(text)\r\n                .then((data) => {\r\n                    filtrarDatos(data).then((respuesta) => {\r\n                        //console.log(respuesta.curso);\r\n                        encontrarCursoCoincidencia(respuesta.curso);\r\n                        //setFechaSeleccionada(respuesta.fecha);\r\n                        //establecerAlumnosArreglo(respuesta.alumnos);\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        };\r\n        reader.readAsText(e.target.files[0]);\r\n    }\r\n\r\n    const encontrarCursoCoincidencia = (nombreCurso) => {\r\n        for (var i = 0; i < cursos.length; i++) {\r\n            if (cursos[i].nombre.trim() == 'PROGRA 4') {\r\n                console.log('se debio hacer');\r\n                console.log(cursos[i].nombre + i);\r\n                setCursoSeleccionado(cursos[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // const cambiarCurso = () => {\r\n    //     console.log(cursoSeleccionado);\r\n    //     //setCursoSeleccionado(cursos[2]);\r\n\r\n    // }\r\n\r\n    const RegistroAlumnos = () => {\r\n        return (\r\n            <tbody>{\r\n                alumnos.map((alumno, idx) =>\r\n                    <tr key={idx} >\r\n                        <td>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                className=\"form-control box\"\r\n                                onBlur={handleBlur(idx, 0)}\r\n                                id={`text-${idx}`}\r\n                                defaultValue={alumno.nombre}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <Form.Check\r\n                                custom\r\n                                id={`checkbox-${idx}`}\r\n                                onBlur={handleBlur(idx, 1)}\r\n                                defaultChecked={alumno.asistencia}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                )}</tbody>\r\n        );\r\n    }\r\n\r\n    useEffect(RegistroAlumnos, [alumnos]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Registro de asistencias</h1>\r\n            <Form onSubmit={handleSubmit(onSubmit)} id=\"forma-asistencias\" ref={refForm}>\r\n                <Form.Group id=\"seleccionar-curso\">\r\n                    <Form.Label>Curso</Form.Label>\r\n                    <Form.Control as=\"select\" value={cursoSeleccionado} onChange={(event) => handleChange(event.target.value)} >\r\n                        {cursos.map((curso, idx) => (\r\n                            <option key={curso._id} value={curso}>{curso.nombre}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                {/* \r\n                <input onClick={cambiarCurso} value='cursin' className=\"btn btn-dark\"></input> */}\r\n\r\n\r\n                <Form.Group id=\"seleccionar-grupo\">\r\n                    <Form.Label>Grupo</Form.Label>\r\n                    <Form.Control as=\"select\" custom>\r\n                        <option>Seleccione un grupo...</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group id=\"seleccionar-unidad\">\r\n                    <Form.Label>Unidad</Form.Label>\r\n                    <Form.Control as=\"select\" custom>\r\n                        <option>Seleccione una unidad...</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Label>Fecha</Form.Label>\r\n                <br />\r\n                <Calendar value={fechaSeleccionada} onChange={handleChangeFecha} nuevaFechaCsv={nuevaFechaCsv} />\r\n                <br />\r\n                <br />\r\n\r\n                <h3>Registro</h3>\r\n\r\n                <table className=\"table\" id=\"tablaRegistro\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th scope=\"col\">Alumno</th>\r\n                            <th scope=\"col\">Asistencia</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <RegistroAlumnos />\r\n                </table>\r\n                <Button onClick={agregarAlumno} variant=\"dark\">Aniadir alumno</Button>\r\n\r\n                <br />\r\n                <br />\r\n\r\n                <div className=\"mb-3\">\r\n                    <Form.File id=\"formcheck-api-regular\">\r\n                        <Form.File.Label>Generar asistencia con CSV</Form.File.Label>\r\n                        <Form.File.Input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\r\n                    </Form.File>\r\n                </div>\r\n\r\n                <div className=\"form-group d-flex flex-column justify-content-center\">\r\n                    <input type=\"submit\" value=\"Registrar asistencia\" className=\"btn btn-dark\"></input>\r\n                </div>\r\n\r\n                <p className=\"error\">{mensajeError}</p>\r\n                <AlertaExito />\r\n            </Form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}