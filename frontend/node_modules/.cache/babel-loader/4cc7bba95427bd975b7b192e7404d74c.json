{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jonatan\\\\Desktop\\\\Topicos Web\\\\app-pcmasterrace\\\\frontend\\\\src\\\\components\\\\alumnos\\\\registrarAlumno.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { UsuarioContext } from \"../../contexts/UsuarioContext\";\nimport { ProductosContext } from \"../../contexts/ProductosContext\";\nimport axios from 'axios';\nimport { useForm } from 'react-hook-form';\nimport Alert from 'react-bootstrap/Alert';\nexport default function Alumnos() {\n  _s();\n\n  const [usuario, setUsuario] = useContext(UsuarioContext);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [mensajeError, setMensajeError] = useState(\"\");\n  const [alumnos, setAlumnos] = useState([{\n    nombre: \"\",\n    email: \"\"\n  }]);\n  const [cursoSeleccionado, setCursoSeleccionado] = useState(''); //const [idCursoSeleccionado, idCursoSeleccionado] = useState(0);\n\n  const [cursos, obtenerCursos] = useContext(ProductosContext);\n\n  const mostrarMensajeError = () => {\n    setMensajeError(\"Error al agregar alumno\");\n  };\n\n  const prepararAlumnosFiltrados = datos => {\n    var cursoSeleccionadoLocal = '';\n\n    if (cursoSeleccionado.length == 0) {\n      if (cursos.length > 0) {\n        cursoSeleccionadoLocal = cursos[0]._id;\n      }\n    } else {\n      cursoSeleccionadoLocal = cursoSeleccionado;\n    }\n\n    var registro = [];\n\n    if (cursos != undefined && cursos.length > 0) {\n      const cursoLocalSeleccionado = cursos.find(curso => curso._id == cursoSeleccionadoLocal);\n      const alumnosRegistrados = cursoLocalSeleccionado.alumnos;\n      const nombresAlumnosRegistrados = [];\n      alumnosRegistrados.forEach(element => {\n        nombresAlumnosRegistrados.push(element.nombre);\n      });\n      datos.forEach(element => {\n        if (!nombresAlumnosRegistrados.includes(element.nombre)) {\n          registro.push({\n            nombre: element.nombre,\n            email: element.email\n          });\n        }\n      });\n    }\n\n    return registro;\n  };\n\n  const establecerAlumnosCursos = () => {\n    if (cursoSeleccionado != '') {\n      const idCursoSeleccionado = cursoSeleccionado;\n      const cursoEncontrado = cursos.find(curso => curso._id == idCursoSeleccionado);\n      const arregloAlumnosFormateados = cursoEncontrado.alumnos;\n      const clonAlumnos = [...arregloAlumnosFormateados];\n      setAlumnos(clonAlumnos);\n    } else {\n      if (cursos.length > 0) {\n        const cursoEncontrado = cursos[0];\n        const arregloAlumnosFormateados = cursoEncontrado.alumnos;\n        const clonAlumnos = [...arregloAlumnosFormateados];\n        setAlumnos(clonAlumnos);\n      }\n    }\n  };\n\n  const verificarDatos = (cur, alu) => {\n    if (alu.length == 0) return false;\n    if (cur.length == 0) return false;\n    return true;\n  };\n\n  const onSubmit = data => {\n    var cursoSeleccionadoLocal = '';\n\n    if (cursoSeleccionado.length == 0) {\n      if (cursos.length > 0) {\n        cursoSeleccionadoLocal = cursos[0]._id;\n      }\n    } else {\n      cursoSeleccionadoLocal = cursoSeleccionado;\n    }\n\n    const realizarVerificacion = (cur, alus) => {\n      if (!verificarDatos(cur, alus)) {\n        console.log(\"Datos invalidos\");\n        mostrarMensajeError();\n        return false;\n      }\n\n      return true;\n    };\n\n    if (realizarVerificacion(cursoSeleccionadoLocal, alumnos)) {\n      console.log(alumnos);\n    }\n\n    const registarAlumnoEnCurso = async (idCurso, arregloAlumnos) => {\n      axios.put('http://localhost:5000/cursos/agregaAlumnos', {\n        \"curso\": idCurso,\n        \"alumnos\": JSON.stringify(arregloAlumnos)\n      }).then(res => {\n        console.log(res);\n        obtenerCursos();\n        setShow(true);\n      }).catch(e => {\n        console.log(e);\n        console.log(\"Error en registrar alumno en curso\");\n        mostrarMensajeError();\n      });\n    };\n\n    registarAlumnoEnCurso(cursoSeleccionadoLocal, prepararAlumnosFiltrados(alumnos));\n    console.log(alumnos);\n\n    const borrarCampos = () => {\n      document.getElementById(\"forma-alumnos\").reset();\n    };\n  };\n\n  const agregarAlumno = () => {\n    if (alumnos.length < 40) {\n      establecerAlumnos({\n        nombre: '',\n        email: ''\n      });\n    } else {\n      console.log(\"Demasiados alumnos\");\n    }\n  };\n\n  const establecerAlumnos = alum => {\n    const copia = [...alumnos, alum];\n    setAlumnos(copia);\n  };\n\n  const [show, setShow] = useState(false);\n\n  function AlertaExito() {\n    if (show) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        onClose: () => setShow(false),\n        dismissible: true,\n        children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: \"Registro exitoso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this);\n  }\n\n  const handleBlur = (tags, tipo) => event => {\n    const copia = alumnos;\n\n    if (tipo == 0) {\n      const nombre = event.target.value;\n      copia[tags].nombre = nombre;\n    } else {\n      const email = event.target.value;\n      copia[tags].email = email;\n    }\n\n    setAlumnos(copia);\n  };\n\n  const handleChange = event => {\n    const cursoId = event.target.value;\n\n    if (cursoId != cursoSeleccionado) {\n      setCursoSeleccionado(cursoId);\n    }\n  };\n\n  const RegistroAlumnos = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: alumnos.map((alumno, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex flex-row justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nombre Alumno\",\n          className: \"form-control box\",\n          onBlur: handleBlur(idx, 0),\n          id: `nombre-${idx}`,\n          defaultValue: alumno.nombre,\n          name: \"nombre\",\n          ref: register({\n            required: \"*Nombre requerido\",\n            minLength: {\n              value: 3,\n              message: \"Mínimo 3 caracteres.\"\n            },\n            maxLength: {\n              value: 25,\n              message: \"Máximo 25 caracteres.\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this), errors.nombre && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.nombre.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"alumno@itson.edu.mx\",\n          className: \"form-control box\",\n          onBlur: handleBlur(idx, 1),\n          id: `email-${idx}`,\n          defaultValue: alumno.email,\n          name: \"email\",\n          ref: register({\n            required: \"*Correo requerido\",\n            pattern: {\n              value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n              message: \"Correo invalido\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 42\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this);\n  };\n\n  useEffect(RegistroAlumnos, [alumnos]);\n  useEffect(establecerAlumnosCursos, [cursoSeleccionado]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formulario\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"alumno\",\n        children: \"Registro de alumnos en curso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"forma-alumnos\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group d-flex flex-column justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: cursoSeleccionado,\n            onChange: handleChange,\n            className: \"form-control box\",\n            children: cursos.map((curso, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: curso._id,\n              children: curso.nombre\n            }, curso._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RegistroAlumnos, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group d-flex flex-column justify-content-center s-alumno\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: agregarAlumno,\n            className: \"btn btn-light\",\n            children: \"A\\xF1adir alumno\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group d-flex flex-column justify-content-center s-alumno\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Registrar alumnos\",\n            className: \"btn btn-dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: mensajeError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AlertaExito, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Alumnos, \"5tWFlbImfPhgOVN79XaoCfwloWY=\", false, function () {\n  return [useForm];\n});\n\n_c = Alumnos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alumnos\");","map":{"version":3,"sources":["C:/Users/Jonatan/Desktop/Topicos Web/app-pcmasterrace/frontend/src/components/alumnos/registrarAlumno.component.js"],"names":["React","useContext","useState","useEffect","UsuarioContext","ProductosContext","axios","useForm","Alert","Alumnos","usuario","setUsuario","register","handleSubmit","errors","mensajeError","setMensajeError","alumnos","setAlumnos","nombre","email","cursoSeleccionado","setCursoSeleccionado","cursos","obtenerCursos","mostrarMensajeError","prepararAlumnosFiltrados","datos","cursoSeleccionadoLocal","length","_id","registro","undefined","cursoLocalSeleccionado","find","curso","alumnosRegistrados","nombresAlumnosRegistrados","forEach","element","push","includes","establecerAlumnosCursos","idCursoSeleccionado","cursoEncontrado","arregloAlumnosFormateados","clonAlumnos","verificarDatos","cur","alu","onSubmit","data","realizarVerificacion","alus","console","log","registarAlumnoEnCurso","idCurso","arregloAlumnos","put","JSON","stringify","then","res","setShow","catch","e","borrarCampos","document","getElementById","reset","agregarAlumno","establecerAlumnos","alum","copia","show","AlertaExito","handleBlur","tags","tipo","event","target","value","handleChange","cursoId","RegistroAlumnos","map","alumno","idx","required","minLength","message","maxLength","pattern"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { UsuarioContext } from \"../../contexts/UsuarioContext\";\r\nimport { ProductosContext } from \"../../contexts/ProductosContext\";\r\nimport axios from 'axios';\r\nimport { useForm } from 'react-hook-form';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nexport default function Alumnos() {\r\n    const [usuario, setUsuario] = useContext(UsuarioContext);\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [mensajeError, setMensajeError] = useState(\"\");\r\n    const [alumnos, setAlumnos] = useState([{ nombre: \"\", email: \"\" }]);\r\n    const [cursoSeleccionado, setCursoSeleccionado] = useState('');\r\n    //const [idCursoSeleccionado, idCursoSeleccionado] = useState(0);\r\n    const [cursos, obtenerCursos] = useContext(ProductosContext);\r\n\r\n    const mostrarMensajeError = () => {\r\n        setMensajeError(\"Error al agregar alumno\");\r\n    }\r\n\r\n    const prepararAlumnosFiltrados = (datos) => {\r\n        var cursoSeleccionadoLocal = '';\r\n        if (cursoSeleccionado.length == 0) {\r\n            if (cursos.length > 0) {\r\n                cursoSeleccionadoLocal = cursos[0]._id;\r\n            }\r\n        } else {\r\n            cursoSeleccionadoLocal = cursoSeleccionado;\r\n        }\r\n        var registro = [];\r\n        if (cursos != undefined && cursos.length > 0) {\r\n            const cursoLocalSeleccionado = cursos.find((curso) => curso._id == cursoSeleccionadoLocal);\r\n            const alumnosRegistrados = cursoLocalSeleccionado.alumnos;\r\n            const nombresAlumnosRegistrados = [];\r\n            alumnosRegistrados.forEach(element => {\r\n                nombresAlumnosRegistrados.push(element.nombre);\r\n            });\r\n            datos.forEach(element => {\r\n                if (!nombresAlumnosRegistrados.includes(element.nombre)) {\r\n                    registro.push({ nombre: element.nombre, email: element.email });\r\n                }\r\n            });\r\n        }\r\n        return registro;\r\n    }\r\n\r\n    const establecerAlumnosCursos = () => {\r\n        if (cursoSeleccionado != '') {\r\n            const idCursoSeleccionado = cursoSeleccionado;\r\n            const cursoEncontrado = cursos.find(curso => curso._id == idCursoSeleccionado);\r\n            const arregloAlumnosFormateados = (cursoEncontrado.alumnos);\r\n            const clonAlumnos = [...arregloAlumnosFormateados];\r\n            setAlumnos(clonAlumnos);\r\n        } else {\r\n            if (cursos.length > 0) {\r\n                const cursoEncontrado = cursos[0];\r\n                const arregloAlumnosFormateados = (cursoEncontrado.alumnos);\r\n                const clonAlumnos = [...arregloAlumnosFormateados];\r\n                setAlumnos(clonAlumnos);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const verificarDatos = (cur, alu) => {\r\n        if (alu.length == 0) return false;\r\n        if (cur.length == 0) return false;\r\n        return true;\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        var cursoSeleccionadoLocal = '';\r\n        if (cursoSeleccionado.length == 0) {\r\n            if (cursos.length > 0) {\r\n                cursoSeleccionadoLocal = cursos[0]._id;\r\n            }\r\n        } else {\r\n            cursoSeleccionadoLocal = cursoSeleccionado;\r\n        }\r\n\r\n        const realizarVerificacion = (cur, alus) => {\r\n            if (!verificarDatos(cur, alus)) {\r\n                console.log(\"Datos invalidos\");\r\n                mostrarMensajeError();\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        if (realizarVerificacion(cursoSeleccionadoLocal, alumnos)) {\r\n            console.log(alumnos);\r\n        }\r\n\r\n        const registarAlumnoEnCurso = async (idCurso, arregloAlumnos) => {\r\n            axios.put('http://localhost:5000/cursos/agregaAlumnos', { \"curso\": idCurso, \"alumnos\": JSON.stringify(arregloAlumnos) })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    obtenerCursos();\r\n                    setShow(true);\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                    console.log(\"Error en registrar alumno en curso\");\r\n                    mostrarMensajeError();\r\n                });\r\n        }\r\n\r\n        registarAlumnoEnCurso(cursoSeleccionadoLocal, prepararAlumnosFiltrados(alumnos));\r\n\r\n        console.log(alumnos);\r\n\r\n        const borrarCampos = () => {\r\n            document.getElementById(\"forma-alumnos\").reset();\r\n        }\r\n    }\r\n\r\n    const agregarAlumno = () => {\r\n        if (alumnos.length < 40) {\r\n            establecerAlumnos({ nombre: '', email: '' });\r\n        } else {\r\n            console.log(\"Demasiados alumnos\");\r\n        }\r\n    }\r\n\r\n    const establecerAlumnos = (alum) => {\r\n        const copia = [...alumnos, alum];\r\n        setAlumnos(copia);\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n    function AlertaExito() {\r\n        if (show) {\r\n            return (\r\n                <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\r\n                    <Alert.Heading>Registro exitoso</Alert.Heading>\r\n                </Alert>\r\n            );\r\n        }\r\n        return (<div></div>);\r\n    }\r\n\r\n    const handleBlur = (tags, tipo) => (event) => {\r\n        const copia = alumnos;\r\n        if (tipo == 0) {\r\n            const nombre = event.target.value;\r\n            copia[tags].nombre = nombre;\r\n        } else {\r\n            const email = event.target.value;\r\n            copia[tags].email = email;\r\n        }\r\n        setAlumnos(copia);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const cursoId = event.target.value;\r\n        if (cursoId != cursoSeleccionado) {\r\n            setCursoSeleccionado(cursoId);\r\n        }\r\n    }\r\n\r\n    const RegistroAlumnos = () => {\r\n        return (\r\n            <div>{\r\n                alumnos.map((alumno, idx) =>\r\n                    <div key={idx} className=\"form-group d-flex flex-row justify-content-between\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Nombre Alumno\"\r\n                            className=\"form-control box\"\r\n                            onBlur={handleBlur(idx, 0)}\r\n                            id={`nombre-${idx}`}\r\n                            defaultValue={alumno.nombre}\r\n                            name=\"nombre\"\r\n                            ref={register({ required: \"*Nombre requerido\", minLength: { value: 3, message: \"Mínimo 3 caracteres.\" }, maxLength: { value: 25, message: \"Máximo 25 caracteres.\" } })}\r\n                        ></input>\r\n                        <br />\r\n                        {errors.nombre && <p className=\"error\">{errors.nombre.message}</p>}\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"alumno@itson.edu.mx\"\r\n                            className=\"form-control box\"\r\n                            onBlur={handleBlur(idx, 1)}\r\n                            id={`email-${idx}`}\r\n                            defaultValue={alumno.email}\r\n                            name=\"email\"\r\n                            ref={register({ required: \"*Correo requerido\", pattern: { value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Correo invalido\" } })}\r\n                        ></input>\r\n                        <br />\r\n                        {errors.email && <p className=\"error\">{errors.email.message}</p>}\r\n                    </div>\r\n                )}</div>\r\n        );\r\n    }\r\n\r\n    useEffect(RegistroAlumnos, [alumnos]);\r\n    useEffect(establecerAlumnosCursos, [cursoSeleccionado]);\r\n\r\n    return (\r\n        <div className=\"wrap\">\r\n            <div className=\"formulario\">\r\n                <h1 className=\"alumno\">Registro de alumnos en curso</h1>\r\n                <form id=\"forma-alumnos\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"form-group d-flex flex-column justify-content-center\">\r\n                        <select value={cursoSeleccionado} onChange={handleChange} className=\"form-control box\">\r\n                            {cursos.map((curso, idx) => (\r\n                                <option key={curso._id} value={curso._id}>{curso.nombre}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <RegistroAlumnos />\r\n\r\n                    <div className=\"form-group d-flex flex-column justify-content-center s-alumno\">\r\n                        {/* <input type=\"submit\" value=\"Registrar alumno\" className=\"btn btn-secondary\"></input> */}\r\n                        <button type=\"button\" onClick={agregarAlumno} className=\"btn btn-light\">Añadir alumno</button>\r\n                    </div>\r\n\r\n                    <div className=\"form-group d-flex flex-column justify-content-center s-alumno\">\r\n                        <input type=\"submit\" value=\"Registrar alumnos\" className=\"btn btn-dark\"></input>\r\n                    </div>\r\n                </form>\r\n                <p className=\"error\">{mensajeError}</p>\r\n                <AlertaExito />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}