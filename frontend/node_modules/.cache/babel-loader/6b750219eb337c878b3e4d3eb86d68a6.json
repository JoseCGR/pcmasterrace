{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jonatan\\\\Desktop\\\\Metodos Agiles\\\\AppAsistencias\\\\app-asistencias\\\\frontend\\\\src\\\\contexts\\\\AsistenciasContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useEffect, useContext } from 'react';\nimport { UsuarioContext } from './UsuarioContext';\nimport axios from 'axios';\nexport const AsistenciasContext = /*#__PURE__*/createContext();\nexport const AsistenciasProvider = props => {\n  _s();\n\n  const [usuario, setUsuario] = useContext(UsuarioContext);\n  const [cursos, setCursos] = useState([]);\n  const [asistencias, setAsistencias] = useState([]);\n\n  const obtenerAsistencias = () => {\n    if (cursos != undefined) {\n      let arregloAsistencias = [];\n      cursos.map(curso => {\n        axios.get('http://localhost:5000/asistencias/obtenerAsistencias/', {\n          headers: {\n            authorization: curso._id\n          }\n        }).then(res => {\n          //console.log(res.data);\n          arregloAsistencias.push(res.data);\n          establecerAsistencias(arregloAsistencias); //establecerAsistencias(res.data);\n        }).catch(e => {\n          console.log(e);\n        });\n      });\n      console.log(arregloAsistencias);\n    }\n  };\n\n  function establecerAsistencias(asistencias) {\n    setAsistencias(asistencias);\n  }\n\n  useEffect(obtenerAsistencias, []);\n  return /*#__PURE__*/_jsxDEV(AsistenciasContext.Provider, {\n    value: [asistencias, obtenerAsistencias],\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AsistenciasProvider, \"z0jOE+gWjo6z7z7xwx8C6M0z2k0=\");\n\n_c = AsistenciasProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AsistenciasProvider\");","map":{"version":3,"sources":["C:/Users/Jonatan/Desktop/Metodos Agiles/AppAsistencias/app-asistencias/frontend/src/contexts/AsistenciasContext.js"],"names":["React","useState","createContext","useEffect","useContext","UsuarioContext","axios","AsistenciasContext","AsistenciasProvider","props","usuario","setUsuario","cursos","setCursos","asistencias","setAsistencias","obtenerAsistencias","undefined","arregloAsistencias","map","curso","get","headers","authorization","_id","then","res","push","data","establecerAsistencias","catch","e","console","log","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,EAAoDC,UAApD,QAAsE,OAAtE;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,kBAAkB,gBAAGL,aAAa,EAAxC;AAEP,OAAO,MAAMM,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,UAAU,CAACC,cAAD,CAAxC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMe,kBAAkB,GAAG,MAAM;AAC7B,QAAIJ,MAAM,IAAIK,SAAd,EAAyB;AACrB,UAAIC,kBAAkB,GAAG,EAAzB;AACAN,MAAAA,MAAM,CAACO,GAAP,CAAYC,KAAD,IAAW;AAClBd,QAAAA,KAAK,CAACe,GAAN,CAAU,uDAAV,EAAmE;AAAEC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAEH,KAAK,CAACI;AAAvB;AAAX,SAAnE,EACKC,IADL,CACUC,GAAG,IAAI;AACT;AACAR,UAAAA,kBAAkB,CAACS,IAAnB,CAAwBD,GAAG,CAACE,IAA5B;AACAC,UAAAA,qBAAqB,CAACX,kBAAD,CAArB,CAHS,CAIT;AACH,SANL,EAOKY,KAPL,CAOWC,CAAC,IAAI;AACRC,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,SATL;AAUH,OAXD;AAaAC,MAAAA,OAAO,CAACC,GAAR,CAAYf,kBAAZ;AACH;AACJ,GAlBD;;AAoBA,WAASW,qBAAT,CAA+Bf,WAA/B,EAA4C;AACxCC,IAAAA,cAAc,CAACD,WAAD,CAAd;AACH;;AAEDX,EAAAA,SAAS,CAACa,kBAAD,EAAqB,EAArB,CAAT;AAEA,sBACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE,CAACF,WAAD,EAAcE,kBAAd,CAApC;AAAA,cACKP,KAAK,CAACyB;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CArCM;;GAAM1B,mB;;KAAAA,mB","sourcesContent":["import React, { useState, createContext, useEffect, useContext } from 'react';\r\nimport { UsuarioContext } from './UsuarioContext'\r\nimport axios from 'axios';\r\n\r\nexport const AsistenciasContext = createContext();\r\n\r\nexport const AsistenciasProvider = (props) => {\r\n    const [usuario, setUsuario] = useContext(UsuarioContext);\r\n    const [cursos, setCursos] = useState([]);\r\n    const [asistencias, setAsistencias] = useState([]);\r\n\r\n    const obtenerAsistencias = () => {\r\n        if (cursos != undefined) {\r\n            let arregloAsistencias = [];\r\n            cursos.map((curso) => {\r\n                axios.get('http://localhost:5000/asistencias/obtenerAsistencias/', { headers: { authorization: curso._id } })\r\n                    .then(res => {\r\n                        //console.log(res.data);\r\n                        arregloAsistencias.push(res.data);\r\n                        establecerAsistencias(arregloAsistencias)\r\n                        //establecerAsistencias(res.data);\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    })\r\n            });\r\n\r\n            console.log(arregloAsistencias);\r\n        }\r\n    }\r\n\r\n    function establecerAsistencias(asistencias) {\r\n        setAsistencias(asistencias);\r\n    }\r\n\r\n    useEffect(obtenerAsistencias, []);\r\n\r\n    return (\r\n        <AsistenciasContext.Provider value={[asistencias, obtenerAsistencias]}>\r\n            {props.children}\r\n        </AsistenciasContext.Provider>\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}