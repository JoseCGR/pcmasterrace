{"ast":null,"code":"const parse = require('csv-parse');\n\nconst assert = require('assert');\n\nconst output = [];\nexport const cargarCsv = csv => {\n  return new Promise((resolve, reject) => {\n    const parser = parse({\n      delimiter: [\"\\t\"],\n      relax_column_count: true\n    });\n    parser.on('readable', function () {\n      output = [];\n      let record;\n\n      while (record = parser.read()) {\n        output.push(record);\n      }\n    });\n    parser.on('error', function (err) {\n      console.error(err.message);\n      resolve(Error(err.message));\n    });\n    parser.on('end', function () {\n      console.log('csvParser');\n      console.log(output);\n      resolve(output);\n    });\n    parser.write(csv);\n    parser.end();\n  });\n};","map":{"version":3,"sources":["C:/Users/Jonatan/Desktop/Metodos Agiles/AppAsistencias/app-asistencias/frontend/src/components/asistencias/csvParser.js"],"names":["parse","require","assert","output","cargarCsv","csv","Promise","resolve","reject","parser","delimiter","relax_column_count","on","record","read","push","err","console","error","message","Error","log","write","end"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,WAAD,CAArB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAME,MAAM,GAAG,EAAf;AAEA,OAAO,MAAMC,SAAS,GAAIC,GAAD,IAAS;AAC9B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMC,MAAM,GAAGT,KAAK,CAAC;AACjBU,MAAAA,SAAS,EAAE,CAAC,IAAD,CADM;AAEjBC,MAAAA,kBAAkB,EAAE;AAFH,KAAD,CAApB;AAKAF,IAAAA,MAAM,CAACG,EAAP,CAAU,UAAV,EAAsB,YAAY;AAC9BT,MAAAA,MAAM,GAAG,EAAT;AACA,UAAIU,MAAJ;;AACA,aAAOA,MAAM,GAAGJ,MAAM,CAACK,IAAP,EAAhB,EAA+B;AAC3BX,QAAAA,MAAM,CAACY,IAAP,CAAYF,MAAZ;AACH;AACJ,KAND;AAQAJ,IAAAA,MAAM,CAACG,EAAP,CAAU,OAAV,EAAmB,UAAUI,GAAV,EAAe;AAC9BC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACAZ,MAAAA,OAAO,CAACa,KAAK,CAACJ,GAAG,CAACG,OAAL,CAAN,CAAP;AACH,KAHD;AAKAV,IAAAA,MAAM,CAACG,EAAP,CAAU,KAAV,EAAiB,YAAY;AACzBK,MAAAA,OAAO,CAACI,GAAR,CAAY,WAAZ;AACAJ,MAAAA,OAAO,CAACI,GAAR,CAAYlB,MAAZ;AACAI,MAAAA,OAAO,CAACJ,MAAD,CAAP;AACH,KAJD;AAMAM,IAAAA,MAAM,CAACa,KAAP,CAAajB,GAAb;AACAI,IAAAA,MAAM,CAACc,GAAP;AACH,GA3BM,CAAP;AA4BH,CA7BM","sourcesContent":["const parse = require('csv-parse');\r\nconst assert = require('assert');\r\nconst output = [];\r\n\r\nexport const cargarCsv = (csv) => {\r\n    return new Promise((resolve, reject) => {\r\n        const parser = parse({\r\n            delimiter: [\"\\t\"],\r\n            relax_column_count: true\r\n        });\r\n\r\n        parser.on('readable', function () {\r\n            output = [];\r\n            let record;\r\n            while (record = parser.read()) {\r\n                output.push(record);\r\n            }\r\n        });\r\n\r\n        parser.on('error', function (err) {\r\n            console.error(err.message);\r\n            resolve(Error(err.message));\r\n        });\r\n\r\n        parser.on('end', function () {\r\n            console.log('csvParser');\r\n            console.log(output);\r\n            resolve(output);\r\n        });\r\n\r\n        parser.write(csv);\r\n        parser.end();\r\n    });\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}