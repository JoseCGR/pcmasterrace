{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jonatan\\\\Desktop\\\\Metodos Agiles\\\\AppAsistencias\\\\app-asistencias\\\\frontend\\\\src\\\\components\\\\alumnos\\\\registrarAlumno.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { UsuarioContext } from \"../../contexts/UsuarioContext\";\nimport { CursosContext } from \"../../contexts/CursosContext\";\nimport axios from 'axios';\nimport { useForm } from 'react-hook-form';\nimport Alert from 'react-bootstrap/Alert';\nexport default function Alumnos() {\n  _s();\n\n  const [usuario, setUsuario] = useContext(UsuarioContext);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [mensajeError, setMensajeError] = useState(\"\");\n  const [alumnos, setAlumnos] = useState([{\n    nombre: \"\",\n    email: \"\"\n  }]);\n  const [cursoSeleccionado, setCursoSeleccionado] = useState('');\n  const [cursos, obtenerCursos] = useContext(CursosContext);\n\n  const mostrarMensajeError = () => {\n    setMensajeError(\"Error al agregar alumno\");\n  };\n\n  const verificarDatos = (cur, alu) => {\n    if (alu.length == 0) return false;\n    if (cur.length == 0) return false;\n    return true;\n  };\n\n  const onSubmit = data => {\n    var cursoSeleccionadoLocal = '';\n\n    if (cursoSeleccionado.length == 0) {\n      if (cursos.length > 0) {\n        cursoSeleccionadoLocal = cursos[0]._id;\n      }\n    } else {\n      cursoSeleccionadoLocal = cursoSeleccionado;\n    }\n\n    const realizarVerificacion = (cur, alus) => {\n      if (!verificarDatos(cur, alus)) {\n        console.log(\"Datos invalidos\");\n        mostrarMensajeError();\n        return false;\n      }\n\n      return true;\n    };\n\n    if (realizarVerificacion(cursoSeleccionadoLocal, alumnos)) {\n      console.log(alumnos); // alumnos.map(reg => {\n      //     const alumno = {\n      //         \"nombre\": reg.nombre,\n      //         \"email\": reg.email,\n      //     }\n      //     const registarAlumno = () => {\n      //         axios.post('http://localhost:5000/alumnos/add', alumno)\n      //             .then(res => {\n      //                 console.log(res);\n      //                 asignarAlumnoAUsuario(usuario._id, res);\n      //             })\n      //             .catch(e => {\n      //                 console.log(e);\n      //                 console.log(\"Error en registrar alumno\");\n      //                 mostrarMensajeError();\n      //             });\n      //     }\n      //     registarAlumno();\n      // });\n    } // const asignarAlumnoAUsuario = async (idUsuario, res) => {\n    //     axios.post('http://localhost:5000/usuarios/relAlumno', { \"usuario\": idUsuario, \"alumno\": res })\n    //         .then(res => {\n    //             console.log(res);\n    //             setShow(true);\n    //         })\n    //         .catch(e => {\n    //             console.log(e);\n    //             console.log(\"Error en asignar alumno a usuario\");\n    //             mostrarMensajeError();\n    //         });\n    // }\n\n\n    const registarAlumnoEnCurso = async (idCurso, arregloAlumnos) => {\n      axios.put('http://localhost:5000/cursos/agregaAlumnos', {\n        \"curso\": idCurso,\n        \"alumnos\": JSON.stringify(arregloAlumnos)\n      }).then(res => {\n        console.log(res);\n        obtenerCursos();\n        setShow(true);\n      }).catch(e => {\n        console.log(e);\n        console.log(\"Error en registrar alumno en curso\");\n        mostrarMensajeError();\n      });\n    };\n\n    registarAlumnoEnCurso(cursoSeleccionadoLocal, alumnos);\n    console.log(alumnos);\n\n    const borrarCampos = () => {\n      document.getElementById(\"forma-alumnos\").reset();\n    };\n  };\n\n  const agregarAlumno = () => {\n    if (alumnos.length < 40) {\n      establecerAlumnos({\n        nombre: '',\n        email: ''\n      });\n    } else {\n      console.log(\"Demasiados alumnos\");\n    }\n  };\n\n  const establecerAlumnos = alum => {\n    const copia = [...alumnos, alum];\n    setAlumnos(copia);\n  };\n\n  const [show, setShow] = useState(false);\n\n  function AlertaExito() {\n    if (show) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        onClose: () => setShow(false),\n        dismissible: true,\n        children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: \"Registro exitoso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this);\n  }\n\n  const handleBlur = (tags, tipo) => event => {\n    const copia = alumnos;\n\n    if (tipo == 0) {\n      const nombre = event.target.value;\n      copia[tags].nombre = nombre;\n    } else {\n      const email = event.target.value;\n      copia[tags].email = email;\n    }\n\n    setAlumnos(copia);\n  };\n\n  const handleChange = event => {\n    const cursoId = event.target.value;\n\n    if (cursoId != cursoSeleccionado) {\n      setCursoSeleccionado(cursoId);\n    }\n  };\n\n  const RegistroAlumnos = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: alumnos.map((alumno, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex flex-row justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nombre Alumno\",\n          className: \"form-control box\",\n          onBlur: handleBlur(idx, 0),\n          id: `nombre-${idx}`,\n          defaultValue: alumno.nombre,\n          name: \"nombre\",\n          ref: register({\n            required: \"*Nombre requerido\",\n            minLength: {\n              value: 1,\n              message: \"MÃ­nimo 1 caracteres.\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), errors.nombre && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.nombre.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"alumno@itson.edu.mx\",\n          className: \"form-control box\",\n          onBlur: handleBlur(idx, 1),\n          id: `email-${idx}`,\n          defaultValue: alumno.email,\n          name: \"email\",\n          ref: register({\n            required: \"*Correo requerido\",\n            pattern: {\n              value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n              message: \"Correo invalido\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 42\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this);\n  };\n\n  useEffect(RegistroAlumnos, [alumnos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formulario\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"alumno\",\n        children: \"Registro de alumnos en curso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"forma-alumnos\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group d-flex flex-column justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: cursoSeleccionado,\n            onChange: handleChange,\n            className: \"form-control box\",\n            children: cursos.map((curso, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: curso._id,\n              children: curso.nombre\n            }, curso._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RegistroAlumnos, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group d-flex flex-column justify-content-center s-alumno\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: agregarAlumno,\n            className: \"btn btn-light\",\n            children: \"A\\xF1adir alumno\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group d-flex flex-column justify-content-center s-alumno\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Registrar alumnos\",\n            className: \"btn btn-dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: mensajeError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AlertaExito, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Alumnos, \"vGGcd7GDqKV2JbBVn5GzpCs05/I=\", false, function () {\n  return [useForm];\n});\n\n_c = Alumnos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alumnos\");","map":{"version":3,"sources":["C:/Users/Jonatan/Desktop/Metodos Agiles/AppAsistencias/app-asistencias/frontend/src/components/alumnos/registrarAlumno.component.js"],"names":["React","useContext","useState","useEffect","UsuarioContext","CursosContext","axios","useForm","Alert","Alumnos","usuario","setUsuario","register","handleSubmit","errors","mensajeError","setMensajeError","alumnos","setAlumnos","nombre","email","cursoSeleccionado","setCursoSeleccionado","cursos","obtenerCursos","mostrarMensajeError","verificarDatos","cur","alu","length","onSubmit","data","cursoSeleccionadoLocal","_id","realizarVerificacion","alus","console","log","registarAlumnoEnCurso","idCurso","arregloAlumnos","put","JSON","stringify","then","res","setShow","catch","e","borrarCampos","document","getElementById","reset","agregarAlumno","establecerAlumnos","alum","copia","show","AlertaExito","handleBlur","tags","tipo","event","target","value","handleChange","cursoId","RegistroAlumnos","map","alumno","idx","required","minLength","message","pattern","curso"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { UsuarioContext } from \"../../contexts/UsuarioContext\";\r\nimport { CursosContext } from \"../../contexts/CursosContext\";\r\nimport axios from 'axios';\r\nimport { useForm } from 'react-hook-form';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nexport default function Alumnos() {\r\n    const [usuario, setUsuario] = useContext(UsuarioContext);\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [mensajeError, setMensajeError] = useState(\"\");\r\n    const [alumnos, setAlumnos] = useState([{ nombre: \"\", email: \"\" }]);\r\n    const [cursoSeleccionado, setCursoSeleccionado] = useState('');\r\n    const [cursos, obtenerCursos] = useContext(CursosContext);\r\n\r\n    const mostrarMensajeError = () => {\r\n        setMensajeError(\"Error al agregar alumno\");\r\n    }\r\n\r\n    const verificarDatos = (cur, alu) => {\r\n        if (alu.length == 0) return false;\r\n        if (cur.length == 0) return false;\r\n        return true;\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        var cursoSeleccionadoLocal = '';\r\n        if (cursoSeleccionado.length == 0) {\r\n            if (cursos.length > 0) {\r\n                cursoSeleccionadoLocal = cursos[0]._id;\r\n            }\r\n        } else {\r\n            cursoSeleccionadoLocal = cursoSeleccionado;\r\n        }\r\n\r\n        const realizarVerificacion = (cur, alus) => {\r\n            if (!verificarDatos(cur, alus)) {\r\n                console.log(\"Datos invalidos\");\r\n                mostrarMensajeError();\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        if (realizarVerificacion(cursoSeleccionadoLocal, alumnos)) {\r\n            console.log(alumnos);\r\n\r\n            // alumnos.map(reg => {\r\n            //     const alumno = {\r\n            //         \"nombre\": reg.nombre,\r\n            //         \"email\": reg.email,\r\n            //     }\r\n\r\n            //     const registarAlumno = () => {\r\n            //         axios.post('http://localhost:5000/alumnos/add', alumno)\r\n            //             .then(res => {\r\n            //                 console.log(res);\r\n            //                 asignarAlumnoAUsuario(usuario._id, res);\r\n            //             })\r\n            //             .catch(e => {\r\n            //                 console.log(e);\r\n            //                 console.log(\"Error en registrar alumno\");\r\n            //                 mostrarMensajeError();\r\n            //             });\r\n            //     }\r\n            //     registarAlumno();\r\n            // });\r\n        }\r\n\r\n        // const asignarAlumnoAUsuario = async (idUsuario, res) => {\r\n        //     axios.post('http://localhost:5000/usuarios/relAlumno', { \"usuario\": idUsuario, \"alumno\": res })\r\n        //         .then(res => {\r\n        //             console.log(res);\r\n        //             setShow(true);\r\n        //         })\r\n        //         .catch(e => {\r\n        //             console.log(e);\r\n        //             console.log(\"Error en asignar alumno a usuario\");\r\n        //             mostrarMensajeError();\r\n        //         });\r\n        // }\r\n\r\n        const registarAlumnoEnCurso = async (idCurso, arregloAlumnos) => {\r\n            axios.put('http://localhost:5000/cursos/agregaAlumnos', { \"curso\": idCurso, \"alumnos\": JSON.stringify(arregloAlumnos) })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    obtenerCursos();\r\n                    setShow(true);\r\n                })\r\n                .catch(e => {\r\n                    console.log(e);\r\n                    console.log(\"Error en registrar alumno en curso\");\r\n                    mostrarMensajeError();\r\n                });\r\n        }\r\n\r\n        registarAlumnoEnCurso(cursoSeleccionadoLocal, alumnos);\r\n\r\n        console.log(alumnos);\r\n\r\n        const borrarCampos = () => {\r\n            document.getElementById(\"forma-alumnos\").reset();\r\n        }\r\n    }\r\n\r\n    const agregarAlumno = () => {\r\n        if (alumnos.length < 40) {\r\n            establecerAlumnos({ nombre: '', email: '' });\r\n        } else {\r\n            console.log(\"Demasiados alumnos\");\r\n        }\r\n    }\r\n\r\n    const establecerAlumnos = (alum) => {\r\n        const copia = [...alumnos, alum];\r\n        setAlumnos(copia);\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n    function AlertaExito() {\r\n        if (show) {\r\n            return (\r\n                <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\r\n                    <Alert.Heading>Registro exitoso</Alert.Heading>\r\n                </Alert>\r\n            );\r\n        }\r\n        return (<div></div>);\r\n    }\r\n\r\n    const handleBlur = (tags, tipo) => (event) => {\r\n        const copia = alumnos;\r\n        if (tipo == 0) {\r\n            const nombre = event.target.value;\r\n            copia[tags].nombre = nombre;\r\n        } else {\r\n            const email = event.target.value;\r\n            copia[tags].email = email;\r\n        }\r\n        setAlumnos(copia);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const cursoId = event.target.value;\r\n        if (cursoId != cursoSeleccionado) {\r\n            setCursoSeleccionado(cursoId);\r\n        }\r\n    }\r\n\r\n    const RegistroAlumnos = () => {\r\n        return (\r\n            <div>{\r\n                alumnos.map((alumno, idx) =>\r\n                    <div key={idx} className=\"form-group d-flex flex-row justify-content-between\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Nombre Alumno\"\r\n                            className=\"form-control box\"\r\n                            onBlur={handleBlur(idx, 0)}\r\n                            id={`nombre-${idx}`}\r\n                            defaultValue={alumno.nombre}\r\n                            name=\"nombre\"\r\n                            ref={register({ required: \"*Nombre requerido\", minLength: { value: 1, message: \"MÃ­nimo 1 caracteres.\" } })}\r\n                        ></input>\r\n                        {errors.nombre && <p className=\"error\">{errors.nombre.message}</p>}\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"alumno@itson.edu.mx\"\r\n                            className=\"form-control box\"\r\n                            onBlur={handleBlur(idx, 1)}\r\n                            id={`email-${idx}`}\r\n                            defaultValue={alumno.email}\r\n                            name=\"email\"\r\n                            ref={register({ required: \"*Correo requerido\", pattern: { value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, message: \"Correo invalido\" } })}\r\n                        ></input>\r\n                        {errors.email && <p className=\"error\">{errors.email.message}</p>}\r\n                    </div>\r\n                )}</div>\r\n        );\r\n    }\r\n\r\n    useEffect(RegistroAlumnos, [alumnos]);\r\n\r\n    return (\r\n        <div className=\"wrap\">\r\n            <div className=\"formulario\">\r\n                <h1 className=\"alumno\">Registro de alumnos en curso</h1>\r\n                <form id=\"forma-alumnos\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"form-group d-flex flex-column justify-content-center\">\r\n                        <select value={cursoSeleccionado} onChange={handleChange} className=\"form-control box\">\r\n                            {cursos.map((curso, idx) => (\r\n                                <option key={curso._id} value={curso._id}>{curso.nombre}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <RegistroAlumnos />\r\n\r\n                    <div className=\"form-group d-flex flex-column justify-content-center s-alumno\">\r\n                        {/* <input type=\"submit\" value=\"Registrar alumno\" className=\"btn btn-secondary\"></input> */}\r\n                        <button type=\"button\" onClick={agregarAlumno} className=\"btn btn-light\">AÃ±adir alumno</button>\r\n                    </div>\r\n\r\n                    <div className=\"form-group d-flex flex-column justify-content-center s-alumno\">\r\n                        <input type=\"submit\" value=\"Registrar alumnos\" className=\"btn btn-dark\"></input>\r\n                    </div>\r\n                </form>\r\n                <p className=\"error\">{mensajeError}</p>\r\n                <AlertaExito />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}